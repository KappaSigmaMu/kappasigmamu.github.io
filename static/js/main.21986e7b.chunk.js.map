{"version":3,"sources":["kusama/config/index.ts","kusama/KusamaContext.tsx","account/AccountContext.tsx","helpers/fetchAccounts.ts","static/kappa-sigma-mu-logo.svg","helpers/truncate.ts","components/AccountSelector.tsx","static/discord-logo.svg","static/element-logo.svg","static/twitter-logo.svg","components/base/index.tsx","components/SocialIcons.tsx","components/Navbar.tsx","styles/globalStyle.ts","styles/Theme.ts","static/mock-canary.svg","pages/CyborgGuidePage.tsx","helpers/humanize.ts","pages/explore/BiddersPage/BidsList.tsx","pages/explore/BiddersPage/index.tsx","pages/explore/components/Sidebar.tsx","pages/explore/ExplorePage.tsx","static/canary-level-1.svg","components/Level.tsx","components/LevelNotification.tsx","components/NextStep.tsx","helpers/FormattedKSM.tsx","components/rotation-bar/Bid.tsx","hooks/useBlockTime.ts","components/rotation-bar/CurrentRound.tsx","components/rotation-bar/RoundPayout.tsx","components/rotation-bar/Strikes.tsx","reportWebVitals.ts","hooks/useConsts.ts","components/rotation-bar/RotationBar.tsx","pages/HomePage.tsx","static/kappa-sigma-mu-title.svg","pages/LandingPage.tsx","static/map-icon.svg","pages/WelcomePage.tsx","pages/App.tsx","index.tsx"],"names":["configEnv","require","config","RPC","jsonrpc","SOCKET","PROVIDER_SOCKET","TYPES","types","INIT_STATE","api","apiError","apiState","keyring","keyringState","reducer","state","action","type","payload","KusamaContext","React","createContext","KusamaContextProvider","props","useReducer","dispatch","provider","WsProvider","ApiPromise","rpc","on","isReady","then","err","connect","Provider","value","children","useKusama","useContext","storedActiveAccount","JSON","parse","localStorage","getItem","storedAccounts","activeAccount","setActiveAccount","accounts","setAccounts","level","AccountContext","AccountContextProvider","useState","setLevel","loading","query","society","useEffect","setLevelCheckingAccounts","forEach","account","toString","address","bids","response","map","who","candidates","members","useAccount","fetchAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","meta","name","Keyring","ss58Format","encodeAddress","setItem","stringify","console","error","_fetchAccounts","truncateMiddle","str","strLength","separator","length","separatorLength","strLengthWithoutSeparator","beginStr","Math","ceil","endStr","floor","substring","LEVELSTATUS","human","bidder","candidate","cyborg","Title","className","style","marginTop","size","theme","fontSize","SelectedAccountDiv","LevelStatusDiv","toUpperCase","Main","StyledDropdownButton","variant","onSelect","eventKey","filter","acc","includes","onChange","title","option","Dropdown","Item","href","AccountSelector","Spinner","animation","styled","div","colors","grey","primary","DropdownButton","darkGrey","ExternalLink","attrs","target","rel","PrimaryButton","Button","PrimaryLgButton","SocialIcons","src","DiscordLogo","alt","ElementLogo","TwitterLogo","color","Navbar","showAccount","showBrandIcon","showExploreButton","showSocialIcons","Container","Nav","height","width","Link","to","as","NavbarBrand","Brand","KappaSigmaMu","AccountNavbar","onClick","GlobalStyle","createGlobalStyle","Theme","darkBg","lightBg","secondary","white","black","lightGrey","SocietyGuideLink","TattooRulesLink","SocietyElementLink","Motion186Link","ThirdGenerationLink","BrandingDriveLink","CodeRepositoryLink","TrelloLink","CyborgGuidePage","GuideTitleRow","GuideTitle","xs","lg","Col","GuideRow","CanaryImg","Canary","VerticalLine","img","humanizeBidKind","bid","isDeposit","isVouch","accountId","asVouch","truncate","humanizeBidValue","asDeposit","toHuman","Header","StyledHeaderRow","DataRow","StyledDataRow","kind","BidsList","Row","BiddersPage","setBids","content","Sidebar","StyledMenu","defaultStyle","lineHeight","fontWeight","textDecoration","activeStyle","MenuItem","isActive","ul","ExplorePage","path","element","LEVELS","badge","canary","CanarySvgLevel1","Level","Badge","pill","NoFocus","h5","StyledP","p","DefaultLevelNotification","LevelNotification","NextStep","FormattedKSM","Value","Unit","span","Bid","bidAmount","setBidAmount","accountBid","find","DEFAULT_TIME","BN","THRESHOLD","BN_THOUSAND","CurrentRoundProgress","percentageDone","styles","buildStyles","pathColor","trailColor","strokeLinecap","CurrentRound","currentBlock","setCurrentBlock","rotationPeriod","setRotationPeriod","periodBlocksLeft","blocks","BN_ONE","apiOverride","useMemo","blockTime","consts","babe","expectedBlockTime","difficulty","targetBlockTime","timestamp","minimumPeriod","gte","mul","BN_TWO","parachainSystem","bnToBn","toNumber","time","extractTime","abs","days","hours","minutes","seconds","timeStr","s","slice","join","useBlockTime","derive","chain","bestNumber","block","sm","RoundPayout","info","setInfo","pot","onPerfEntry","Circle","active","viewBox","fill","xmlns","cx","cy","r","StrikesCounter","strikesArray","Array","count","concat","maxStrikes","key","Strikes","strikes","setStrikes","candidateDeposit","challengePeriod","maxCandidateIntake","palletId","periodSpend","wrongSideDeduction","useConsts","member","RotationBar","StyledDiv","HomePage","choose","choices","random","nodesData","n","data","i","push","nodesDataFactory","LandingPage","navigate","useNavigate","FullPageHeightRow","objectUrl","nodes","CentralizedCol","KappaSigmaMuTitle","WelcomePage","LevelContainer","StyledContainer","role","MapIcon","AppNavigation","pathname","useLocation","isRoot","match","AppRouter","App","fallback","ReactDOM","render","StrictMode","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.21986e7b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n\nconst configEnv = require(`./${process.env.NODE_ENV}.json`)\nconst config = { ...configEnv }\n\nexport { config }\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\n\nimport { ApiPromise, WsProvider } from '@polkadot/api'\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc'\nimport React, { useReducer, useContext } from 'react'\nimport { config } from './config'\n\nconst RPC = { ...jsonrpc, ...config.RPC }\nconst SOCKET = config.PROVIDER_SOCKET\nconst TYPES = config.types\n\nconst INIT_STATE = {\n  api: null,\n  apiError: null,\n  apiState: null,\n  keyring: {},\n  keyringState: null,\n}\n\ntype StateType = {\n  api: ApiPromise | null\n  apiError: string | null\n  apiState: string | null\n}\n\ntype ActionType =\n  | { type: 'CONNECTING' }\n  | { type: 'CONNECTED'; payload: ApiPromise }\n  | { type: 'READY' }\n  | { type: 'DISCONNECTED' }\n  | { type: 'ERROR'; payload: any }\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n  switch (action.type) {\n    case 'CONNECTING':\n      return { ...state, apiState: 'CONNECTING' }\n    case 'CONNECTED':\n      return { ...state, api: action.payload, apiState: 'CONNECTED' }\n    case 'READY':\n      return { ...state, apiState: 'READY' }\n    case 'DISCONNECTED':\n      return { ...state, apiState: 'DISCONNECTED' }\n    case 'ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload }\n  }\n}\n\nfunction connect(state: StateType, dispatch: React.Dispatch<ActionType>) {\n  const { apiState } = state\n\n  if (apiState && apiState !== 'DISCONNECTED') return\n\n  dispatch({ type: 'CONNECTING' })\n\n  const provider = new WsProvider(SOCKET)\n  const api = new ApiPromise({ provider, types: TYPES, rpc: RPC })\n\n  api.on('connected', () => {\n    dispatch({ type: 'CONNECTED', payload: api })\n    api.isReady.then(() => dispatch({ type: 'READY' }))\n  })\n  api.on('disconnected', () => dispatch({ type: 'DISCONNECTED' }))\n  api.on('error', (err) => dispatch({ type: 'ERROR', payload: err }))\n  api.on('ready', () => dispatch({ type: 'READY' }))\n}\n\nconst KusamaContext = React.createContext<StateType>(INIT_STATE)\n\nfunction KusamaContextProvider(props: { children: JSX.Element }) {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE)\n\n  connect(state, dispatch)\n\n  return <KusamaContext.Provider value={state}>{props.children}</KusamaContext.Provider>\n}\n\nconst useKusama = () => ({ ...useContext(KusamaContext) })\n\nexport { KusamaContextProvider, useKusama }\n","import { Vec } from '@polkadot/types'\nimport { AccountId32 } from '@polkadot/types/interfaces'\nimport { PalletSocietyBid } from '@polkadot/types/lookup'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useKusama } from '../kusama'\n\n// eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\nconst storedActiveAccount = JSON.parse(localStorage.getItem('activeAccount')!) || ''\n// eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\nconst storedAccounts = JSON.parse(localStorage.getItem('accounts')!) || []\n\nconst INIT_STATE = {\n  activeAccount: storedActiveAccount,\n  setActiveAccount: () => ({}),\n  accounts: storedAccounts,\n  setAccounts: () => ({}),\n  level: 'human'\n}\n\ntype StateType = {\n  level: string,\n  setActiveAccount: (account: accountType) => void\n  activeAccount: accountType\n  accounts: accountType[]\n  setAccounts: (accounts: accountType[]) => void\n}\n\nconst AccountContext = React.createContext<StateType>(INIT_STATE)\n\nconst AccountContextProvider = ({ children } : any) => {\n  const { api } = useKusama()\n  const [activeAccount, setActiveAccount] = useState<accountType>(storedActiveAccount)\n  const [accounts, setAccounts] = useState<accountType[]>(storedAccounts)\n  const [level, setLevel] = useState('human')\n\n  const loading = !api?.query?.society\n\n  useEffect(() => {\n    const setLevelCheckingAccounts = (accounts: AccountId32[], level: string) => {\n      setLevel('human')\n      accounts.forEach((account: AccountId32) => {\n        if (account.toString() === activeAccount.address) {\n          setLevel(level)\n        }\n      })\n    }\n\n    if (api) {\n      api.query.society.bids().then((response: Vec<PalletSocietyBid>) => {\n        setLevelCheckingAccounts(response.map(account => account.who), 'bidder')\n      })\n\n      api.query.society.candidates().then((response: Vec<PalletSocietyBid>) => {\n        setLevelCheckingAccounts(response.map(account => account.who), 'candidate')\n      })\n\n      api.query.society.members().then((response: Vec<AccountId32>) => {\n        setLevelCheckingAccounts(response, 'cyborg')\n      })\n    }\n  }, [api?.query?.society, activeAccount])\n\n  const content = loading\n    ? <></>\n    : <AccountContext.Provider value={{ level, activeAccount, setActiveAccount, accounts, setAccounts }}>\n        {children}\n      </AccountContext.Provider>\n\n  return content\n}\n\nconst useAccount = () => ({ ...useContext(AccountContext) })\n\nexport { AccountContextProvider, useAccount }\n","import { web3Accounts, web3Enable } from '@polkadot/extension-dapp'\nimport Keyring from '@polkadot/keyring'\nimport { config } from '../kusama/config'\n\nconst fetchAccounts = (\n  setAccounts: (accounts: { name: string | undefined; address: string }[]) => void,\n  setActiveAccount: (account: { name: string | undefined; address: string }) => void,\n) => {\n  async function _fetchAccounts() {\n    try {\n      await web3Enable(config.APP_NAME)\n      let allAccounts = await web3Accounts()\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: meta.name },\n      }))\n\n      const kusamaPrefix = 2\n      const keyring = new Keyring({ ss58Format: kusamaPrefix, type: 'ed25519' })\n\n      const accounts = allAccounts.map((account) => ({\n        name: account.meta.name,\n        address: keyring.encodeAddress(account.address),\n      }))\n\n      setAccounts(accounts)\n      localStorage.setItem(\"accounts\", JSON.stringify(accounts))\n\n      setActiveAccount(accounts[0])\n      localStorage.setItem(\"activeAccount\", JSON.stringify(accounts[0]))\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  _fetchAccounts()\n}\n\nexport { fetchAccounts }\n","export default __webpack_public_path__ + \"static/media/kappa-sigma-mu-logo.192858ee.svg\";","function truncate(str: string, strLength = 7) {\n  if (!str) { return '' }\n  return str.length > 10 ? str.substring(0, strLength) + '...' : str\n}\n\nfunction truncateMiddle(str: string, strLength = 23, separator = '...') {\n  if (str.length <= strLength) return str\n\n  const separatorLength = separator.length\n  const strLengthWithoutSeparator = strLength - separatorLength\n  const beginStr = Math.ceil(strLengthWithoutSeparator/2)\n  const endStr = Math.floor(strLengthWithoutSeparator/2)\n\n  return str.substring(0, beginStr) +\n         separator +\n         str.substring(str.length - endStr)\n}\n\nexport { truncate, truncateMiddle }\n","import Identicon from '@polkadot/react-identicon'\nimport { Dropdown, DropdownButton, Spinner } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport { truncateMiddle } from '../helpers/truncate'\nimport { useKusama } from '../kusama'\n\ninterface LevelStatusType {\n  [key: string]: string\n}\n\nconst LEVELSTATUS: LevelStatusType = {\n  human: 'WAITING BID',\n  bidder: 'BID SUBMITTED',\n  candidate: 'WAITING POI',\n  cyborg: ''\n}\n\nconst Title = ({ activeAccount }: { activeAccount: accountType }) => {\n  const { level } = useAccount()\n  const account = activeAccount.name\n\n  return (\n    <>\n      <div className='align-top d-inline-block me-3' style={{ marginTop: 6 }}>\n        <Identicon\n          value={activeAccount.address}\n          size={32}\n          theme={'polkadot'}\n        />\n      </div>\n\n      <label style={{ fontSize: '12px' }}>\n        <SelectedAccountDiv className=\"text-start mb-1\">\n          {truncateMiddle(account || '')}\n        </SelectedAccountDiv>\n        <LevelStatusDiv>\n          <label className=\"pe-3\">JOURNEY: {level.toUpperCase()}</label>\n          <label>{LEVELSTATUS[level]}</label>\n        </LevelStatusDiv>\n      </label>\n    </>\n  )\n}\n\nconst Main = () => {\n  const { activeAccount, setActiveAccount, accounts } = useAccount()\n\n  const onChange = (account: string) => {\n    const activeAccount = accounts.filter(acc => acc.address.includes(account))[0]\n    setActiveAccount(activeAccount)\n    localStorage.setItem(\"activeAccount\", JSON.stringify(activeAccount))\n  }\n\n  return (\n    <StyledDropdownButton\n      variant=\"outline-light-grey\"\n      onSelect={(eventKey: string) => onChange(eventKey)}\n      title={<Title activeAccount={activeAccount} />}\n    >\n      {accounts.map((option: { name: string | undefined; address: string }) => (\n        <Dropdown.Item style={{ fontSize: '12px' }} eventKey={option.address} key={option.address} href=\"#\">\n          {option.name ? option.name : option.address}\n        </Dropdown.Item>\n      ))}\n    </StyledDropdownButton>\n  )\n}\n\nconst AccountSelector = () => {\n  const { api } = useKusama()\n  const loading = !api?.query\n  return loading ? <Spinner animation=\"border\" variant=\"primary\" /> : <Main />\n}\n\nconst LevelStatusDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  label {\n    color: ${(props) => props.theme.colors.grey};\n    font-weight: 700;\n  }\n`\n\nconst SelectedAccountDiv = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n  font-size: 14px;\n`\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  background-color: ${(props) => props.theme.colors.darkGrey};\n  & ::after {\n    margin-bottom: 10px;\n  }\n`\n\nexport { AccountSelector }\n","export default __webpack_public_path__ + \"static/media/discord-logo.023684f9.svg\";","export default __webpack_public_path__ + \"static/media/element-logo.9a5a405c.svg\";","export default __webpack_public_path__ + \"static/media/twitter-logo.7a9247c3.svg\";","import { Button } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst ExternalLink = styled.a.attrs(() => ({\n  target: '_blank',\n  rel: 'noreferrer'\n}))``\n\nconst PrimaryButton = styled(Button).attrs(() => ({ variant: 'primary' }))``\nconst PrimaryLgButton = styled(PrimaryButton).attrs(() => ({ size: 'lg' }))``\n\nexport {\n  ExternalLink,\n  PrimaryButton,\n  PrimaryLgButton,\n}\n","import DiscordLogo from '../static/discord-logo.svg'\nimport ElementLogo from '../static/element-logo.svg'\nimport TwitterLogo from '../static/twitter-logo.svg'\nimport { ExternalLink } from './base'\n\nconst SocialIcons = () => (\n  <div className='me-2'>\n    <ExternalLink href=\"https://discord.gg/9AWjTf8wSk\">\n      <img src={DiscordLogo} alt=\"Discord Logo\" />\n    </ExternalLink>\n    &nbsp;\n    <ExternalLink href=\"https://matrix.to/#/!BUmiAAnAYSRGarqwOt:matrix.parity.io?via=matrix.parity.io\">\n      <img src={ElementLogo} alt=\"Element Logo\" />\n    </ExternalLink>\n    &nbsp;\n    <ExternalLink href=\"https://twitter.com/kusamanetwork\">\n      <img src={TwitterLogo} alt=\"Twitter Logo\" style={{color: 'red'}} />\n    </ExternalLink>\n  </div>\n)\n\nexport { SocialIcons }\n","import { Button, Container, Nav, Navbar as RBNavbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useAccount } from '../account/AccountContext'\nimport { fetchAccounts } from '../helpers/fetchAccounts'\nimport KappaSigmaMu from '../static/kappa-sigma-mu-logo.svg'\nimport { AccountSelector } from './AccountSelector'\nimport { SocialIcons } from './SocialIcons'\n\nconst Navbar = ({\n  showAccount=false,\n  showBrandIcon=false,\n  showExploreButton=false,\n  showSocialIcons=false,\n}: NavRouteProps) => (\n  <RBNavbar className=\"mt-4\">\n    <Container>\n      <Nav>{showBrandIcon ? <NavbarBrand /> : <div style={{ height: 82, width: 106 }}></div>}</Nav>\n      <Nav className=\"align-items-center align-self-center\">\n        {showExploreButton ? <Nav.Link to=\"/explore\" as={Link}>Explore</Nav.Link> : <></>}\n        &nbsp;\n        {showSocialIcons ? <SocialIcons /> : <></>}\n        &nbsp;\n        {showAccount ? <AccountNavbar /> : <></>}\n      </Nav>\n    </Container>\n  </RBNavbar>\n)\n\nconst NavbarBrand = () => (\n  <RBNavbar.Brand as={Link} to=\"/\">\n    <img width={90} src={KappaSigmaMu} alt=\"KappaSigmaMu Logo\" />\n  </RBNavbar.Brand>\n)\n\nconst AccountNavbar = () => {\n  const { activeAccount, setActiveAccount, setAccounts } = useAccount()\n\n  return activeAccount\n    ? <AccountSelector />\n    : (\n      <Button variant=\"outline-secondary\" onClick={() => fetchAccounts(setAccounts, setActiveAccount)}>\n        Connect Wallet\n      </Button>\n    )\n}\n\nexport { Navbar }\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    color: white;\n  }\n\n  html {\n    background-color: #212529;\n    font-family: Roboto, sans-serif !important;\n    font-style: normal;\n  }\n\n  body {\n    background-color: #212529;\n  }\n\n  h1 {\n    font-size: 36px;\n    font-weight: bold;\n  }\n\n  h4 {\n    font-size: 16px;\n    font-weight: bold;\n  }\n\n  h2, h3, h4, h5 {\n    color: white;\n  }\n\n  a {\n    color: #01ffff;\n  }\n\n  .navbar-light .navbar-nav .nav-link {\n    color: #01ffff;\n  }\n\n  p {\n    color: #c4c4c4;\n  }\n`\n\nexport { GlobalStyle }\n","import { DefaultTheme } from 'styled-components'\n\nconst Theme: DefaultTheme = {\n  darkBg: '#212529',\n  lightBg: '#ffffff',\n\n  colors: {\n    primary: '#E6007A',\n    secondary: '#01FFFF',\n    white: '#FFFFFF',\n    black: '#212529',\n    grey: '#ced4da',\n    lightGrey: '#6c757d',\n    darkGrey: '#343A40',\n  },\n}\n\nexport { Theme }\n","export default __webpack_public_path__ + \"static/media/mock-canary.d3390cc2.svg\";","import { Col, Container } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { ExternalLink } from '../components/base'\nimport Canary from '../static/mock-canary.svg'\n\nconst SocietyGuideLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://wiki.polkadot.network/docs/maintain-guides-society-kusama',\n}))`\n  font-size: 24px;\n  font-weight: 700;\n  text-decoration: none;\n`\n\nconst TattooRulesLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://polkascan.io/kusama/transaction/0x948d3a4378914341dc7af9220a4c73acb2b3f72a70f14ee8089799da16d94c17',\n}))`\n  text-decoration: none;\n`\n\nconst SocietyElementLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://riot.im/app/#/room/#kappasigmamulounge:matrix.parity.io',\n}))`\n  text-decoration: none;\n`\n\nconst Motion186Link = styled(ExternalLink).attrs(() => ({\n  href: 'https://kusama.polkassembly.io/motion/186',\n}))`\n  text-decoration: none;\n`\n\nconst ThirdGenerationLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://www.youtube.com/watch?v=-JfQ2vCipWU',\n}))`\n  text-decoration: none;\n`\n\nconst BrandingDriveLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://drive.google.com/drive/u/1/folders/1ReG63yRvPgIRRyryDTbrACHELcZoMkA3',\n}))`\n  text-decoration: none;\n`\n\nconst CodeRepositoryLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://github.com/KappaSigmaMu',\n}))`\n  text-decoration: none;\n`\n\nconst TrelloLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://trello.com/b/aqOYaoD0/ksm-society-website',\n}))`\n  text-decoration: none;\n`\n\nconst CyborgGuidePage = () => (\n  <>\n    <Container>\n      <GuideTitleRow>\n        <GuideTitle xs lg=\"6\" className=\"display-1 text-uppercase pt-5\">\n          Cyborg Guide\n        </GuideTitle>\n        <Col className=\"text-uppercase text-end ms-auto pt-5 d-inline-block\">\n          <p>\n            <SocietyGuideLink>Kusama society guide</SocietyGuideLink>\n          </p>\n          <p>\n            <TattooRulesLink>Tattoo rules</TattooRulesLink>\n          </p>\n          <p>\n            <Motion186Link>Motion 186</Motion186Link>\n          </p>\n          <p>\n            <ThirdGenerationLink>The Third Generation</ThirdGenerationLink>\n          </p>\n          <p>\n            <BrandingDriveLink>Branding Drive</BrandingDriveLink>\n          </p>\n          <p>\n            <CodeRepositoryLink>Code Repository</CodeRepositoryLink>\n          </p>\n          <p>\n            <TrelloLink>Trello</TrelloLink>\n          </p>\n        </Col>\n      </GuideTitleRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col>\n          <div className=\"h1 text-uppercase font-weight-bold\">\n            The journey\n          </div>\n          <p className=\"mb-1\">\n            To become a Cyborg means to get a membership in the Kappa Sigma Mu\n            Society.\n          </p>\n          <div className=\"mb-5\">\n            <SocietyGuideLink>You can learn more about it here.</SocietyGuideLink>\n          </div>\n          <CanaryImg src={Canary} className=\"float-end\" alt=\"Canary\" />\n        </Col>\n      </GuideRow>\n      <VerticalLine />\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 1\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Human</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Connect your wallet</p>\n          </strong>\n          <p>\n            You start out as a Human, with your Polkadot Wallet connected.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 2\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Bidder</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Place a Bid</p>\n          </strong>\n          <p>\n            Then you must place a bid. Your bid is the KSM value you want to\n            receive for getting your Cyborg Tattoo, or Proof of Ink (PoI).\n            This process will require some fees.\n          </p>\n          <strong>\n            <p className=\"mb-1\">Get your Bid Accepted</p>\n          </strong>\n          <p>\n            You must do this inside a time frame, the Round. Your bid will\n            only get accepted if it’s between the smallest bids which sum is\n            below the pot value of the round. It is like a reverse auction.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 3\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Candidate</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Becoming a Candidate</p>\n          </strong>\n          <p className=\"mb-1\">\n            When your bid gets accepted, you become a Candidate. Now it’s time\n            to get tattoed!\n          </p>\n          <p>\n            <TattooRulesLink>See the rules for your PoI here.</TattooRulesLink>\n          </p>\n          <strong>\n            <p className=\"mb-1\">Your tattoo, the Proof of Ink (PoI)</p>\n          </strong>\n          <p>\n            After getting your PoI, it’s time to show it to the world! You can\n            submit a photo or video of it&nbsp;\n            <SocietyElementLink>here on our Kappa Sigma Mu Lounge.</SocietyElementLink>\n          </p>\n          <strong>\n            <p className=\"mb-1\">Getting votes on your Proof of Ink</p>\n          </strong>\n          <p>\n            Once it is submitted, the Cyborgs can vote for your approval.\n            You’re almost there! Just be careful with your timeframe, you have\n            only one round to get the PoI <b>and</b> get voted.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 4\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Cyborg</div>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Becoming a Cyborg</p>\n          </strong>\n          <p>\n            Once the round is up, one random vote will decide if you are a\n            Cyborg or not. It’s not the majority of votes! Still, the most you\n            get approved, the better are your chances.\n          </p>\n          <strong>\n            <p className=\"mb-1\">\n              Congrats! You are now a Society member. You can vote, be a\n              Skeptic or a Defender\n            </p>\n          </strong>\n          <p>\n            As a Cyborg, you can now vote on new Candidates. If you are a\n            Skeptic in the Round, you must vote, otherwise you get a strike.\n            10 strikes eliminate you from the Society. Cyborgs also can be\n            requested to show their PoI again, as Defenders, to prove they\n            still have their PoI.\n          </p>\n          <strong>\n            <p className=\"mb-1\">Request a Payout</p>\n          </strong>\n          <p>\n          Once you become a Cyborg, there is a period to wait until you\n          can request your payout, the bid you placed. Once this period\n          is up, you can request it here on this website.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n  </>\n)\n\nconst GuideRow = styled(Container)`\n  padding-left: 12px;\n  padding-bottom: 20px;\n`\n\nconst GuideTitleRow = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 12px;\n  padding-bottom: 20px;\n`\n\nconst GuideTitle = styled(Col)`\n  font-size: 450%;\n  color: white;\n  font-weight: bolder;\n  display: inline-block;\n`\n\nconst VerticalLine = styled.div`\n  border-left: 2px solid grey;\n  margin-left: -10px;\n  height: 1600px;\n  position: absolute;\n  z-index: 3;\n`\n\nconst CanaryImg = styled.img`\n  bottom: 30px;\n  width: 50%;\n`\n\nexport { CyborgGuidePage }\n","import type { PalletSocietyBidKind } from '@polkadot/types/lookup'\nimport { truncate } from './truncate'\n\nfunction humanizeBidKind(bid: Partial<PalletSocietyBidKind>) {\n  if (!bid) { return '<UNKNOWN KIND>' }\n\n  if (bid.isDeposit) {\n    return 'Deposit'\n  } else if (bid.isVouch) {\n    const accountId = bid.asVouch?.[0] || ''\n    return `Vouch: ${truncate(accountId.toString())}`\n  } else {\n    return '<UNKNOWN KIND>'\n  }\n}\n\nfunction humanizeBidValue(bid: Partial<PalletSocietyBidKind>) {\n  if (!bid) { return '<UNKNOWN VALUE>' }\n\n  if (bid.isDeposit) {\n    return bid.asDeposit?.toHuman()\n  } else if (bid.isVouch) {\n    return bid.asVouch?.[1].toHuman()\n  } else {\n    return '<UNKNOWN VALUE>'\n  }\n}\n\nexport { humanizeBidKind, humanizeBidValue }\n","import Identicon from '@polkadot/react-identicon'\nimport { Col, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { humanizeBidKind, humanizeBidValue } from '../../../helpers/humanize'\nimport { truncateMiddle } from '../../../helpers/truncate'\n\nconst Header = () => (\n  <StyledHeaderRow>\n    <Col xs={1} className=\"text-center\">#</Col>\n    <Col xs={4} className=\"text-start\">Wallet Hash</Col>\n    <Col xs={5} className=\"text-start\">Bid Kind</Col>\n    <Col xs={2} className=\"text-end\">Value</Col>\n  </StyledHeaderRow>\n)\n\nconst DataRow = ({ bid }: { bid: any }) => (\n  <StyledDataRow key={bid.who?.toString()}>\n    <Col xs={1} className=\"text-center\">\n      <Identicon value={bid.who} size={32} theme={'polkadot'} />\n    </Col>\n    <Col xs={4} className=\"text-start text-truncate\">\n      {truncateMiddle(bid.who?.toString())}\n    </Col>\n    <Col xs={5} className=\"text-start text-truncate\">\n      {humanizeBidKind(bid.kind)}\n    </Col>\n    <Col xs={2} className=\"text-end\">\n      {humanizeBidValue(bid.kind)}\n    </Col>\n  </StyledDataRow>\n)\n\nconst BidsList = ({ bids }: { bids: any }): JSX.Element => (\n  <>\n    <Header />\n    {bids.map((bid: any) => (\n      <DataRow key={bid.who} bid={bid} />\n    ))}\n  </>\n)\n\nconst StyledHeaderRow = styled(Row)`\n  color: #fff;\n  line-height: 3;\n\n  & .text-end {\n    padding-right: 36px;\n  }\n`\n\nconst StyledDataRow = styled(StyledHeaderRow)`\n  background-color: #343A40;\n  border-radius: 6px;\n  margin-top: 10px;\n`\n\nexport { BidsList }\n","import type { Vec } from '@polkadot/types'\nimport type { PalletSocietyBid } from '@polkadot/types/lookup'\nimport { useEffect, useState } from 'react'\nimport { Container, Col, Row, Spinner } from 'react-bootstrap'\nimport { useKusama } from '../../../kusama'\nimport { BidsList } from './BidsList'\n\nconst BiddersPage = (): JSX.Element => {\n  const { api } = useKusama()\n  const [bids, setBids] = useState<Vec<PalletSocietyBid> | []>([])\n\n  const loading = !api?.query?.society\n\n  useEffect(() => {\n    if (!loading) {\n      api.query.society.bids().then((response: Vec<PalletSocietyBid>) => {\n        setBids(response)\n      })\n    }\n  }, [api?.query?.society])\n\n  const content = loading ? <Spinner animation=\"border\" variant=\"primary\" /> : <BidsList bids={bids} />\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={12}>\n          {content}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport { BiddersPage }\n","import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Sidebar = () => (\n  <StyledMenu>\n    <MenuItem to=\"/explore/bidders\">Bidders</MenuItem>\n    <MenuItem to=\"/explore/members\">Members</MenuItem>\n    <MenuItem to=\"/explore/candidates\">Candidates</MenuItem>\n    <MenuItem to=\"/explore/suspended\">Suspended</MenuItem>\n  </StyledMenu>\n)\n\nconst defaultStyle = { color: '#707070', fontSize: 16, lineHeight: 2, fontWeight: 700, textDecoration: 'none' }\nconst activeStyle = { ...defaultStyle, color: 'white', fontSize: 20 }\n\nconst MenuItem = ({ to, children }: { to: string; children: string }): JSX.Element => (\n  <li>\n    <NavLink to={to} style={({ isActive }) => isActive ? activeStyle : defaultStyle }>\n      {children}\n    </NavLink>\n  </li>\n)\n\nconst StyledMenu = styled.ul`\n  list-style: none;\n`\n\nexport { Sidebar }\n","import { Container, Col, Row } from 'react-bootstrap'\nimport { Route, Routes } from 'react-router-dom'\nimport { BiddersPage } from './BiddersPage'\nimport { Sidebar } from './components/Sidebar'\n\nconst ExplorePage = (): JSX.Element => {\n  return (\n    <Container>\n      <Row>\n        <Col xs={2}>\n          <Sidebar />\n        </Col>\n        <Col xs={10}>\n          <Routes>\n            <Route path=\"/\" element={<>TODO EXPLORE PAGE</>}/>\n            <Route path=\"/bidders\" element={<BiddersPage />}/>\n            <Route path=\"/members\" element={<>TODO MEMBERS PAGE</>}/>\n            <Route path=\"/candidates\" element={<>TODO CANDIDATES PAGE</>}/>\n            <Route path=\"/suspended\" element={<>TODO SUSPENDED PAGE</>}/>\n          </Routes>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport { ExplorePage }\n","export default __webpack_public_path__ + \"static/media/canary-level-1.d3390cc2.svg\";","import { ReactElement } from 'react'\nimport { Badge } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport CanarySvgLevel1 from '../static/canary-level-1.svg'\n\ninterface LevelsType {\n  [key: string]: {badge: string, name: string, canary: ReactElement},\n}\n\n// Find a better way for positioning the canary (responsive)\nconst CanaryImg = styled.img`\n  position: absolute;\n  top: 23%;\n  left: 11%;\n`\n\nconst CanaryLevel1 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 1\" />\nconst CanaryLevel2 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 2\" />\nconst CanaryLevel3 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 3\" />\nconst CanaryLevel4 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 4\" />\n\nconst LEVELS: LevelsType = {\n  human: { badge: \"Level 1\", name: \"Human\", canary: CanaryLevel1 },\n  bidder: { badge: \"Level 2\", name: \"Bidder\", canary: CanaryLevel2 },\n  candidate: { badge: \"Level 3\", name: \"Candidate\", canary: CanaryLevel3 },\n  cyborg: { badge: \"Level 4\", name: \"Cyborg\", canary: CanaryLevel4 }\n}\n\nconst Level = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <p>\n        <Badge pill>{LEVELS[level].badge}</Badge>\n      </p>\n      {LEVELS[level].canary}\n      <h1><u>{LEVELS[level].name}</u></h1>\n    </>\n  )\n}\n\nexport { Level }\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\n\nconst NoFocus = styled.h5`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst StyledP = styled.p`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst DefaultLevelNotification  = (\n  <>\n    You are IN the society;<br/>\n    You are NOT a member;<br/>\n    You CAN&apos;T vote;<br/>\n    You CAN EXPLORE the chain data.\n  </>\n)\n\nconst HumanLevelNotification = (\n  <h5>\n    {DefaultLevelNotification}\n  </h5>\n)\n\nconst BidderLevelNotification = (\n  <h5>\n    Your bid NEEDS to get accepted;<br/>\n    <NoFocus>{DefaultLevelNotification}</NoFocus>\n  </h5>\n)\n\nconst CandidateLevelNotification = (\n  <h5>\n    You need to SUBMIT your Proof of Ink;<br/>\n    Your Proof of Ink needs to be VOTED;<br/>\n    <NoFocus>\n      Your bid should be low enough to get accepted;<br/>\n      {DefaultLevelNotification}\n    </NoFocus>\n  </h5>\n)\n\nconst CyborgLevelNotification = (\n  <>\n    <h5>\n      You can enjoy, now.\n    </h5>\n    <Link to=\"/guide\" className=\"ml-5 btn btn-primary\">\n      What&apos;s next?\n    </Link>\n  </>\n)\n\nconst LEVELS: LevelsType = {\n  human: HumanLevelNotification,\n  bidder: BidderLevelNotification,\n  candidate: CandidateLevelNotification,\n  cyborg: CyborgLevelNotification\n}\n\nconst LevelNotification = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <StyledP>Level Notification</StyledP>\n      {LEVELS[level]}\n    </>\n  )\n}\n\nexport { LevelNotification }\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\n\nconst StyledP = styled.p`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst HumanNextStep = (\n  <>\n    <h5 className=\"mb-4\">\n      To become a Candidate you need to level up;\n      <br/>\n      To level up you must first Submit a Bid.\n    </h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Bid Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/guide\" className=\"ml-5 btn btn-primary\">\n      Submit a Bid\n    </Link>\n  </>\n)\n\nconst BidderNextStep = (\n  <>\n    <h5>To become a Candidate your bid must fit the parameters.</h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Bid Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/home/bids\" className=\"ml-5 btn btn-primary\">\n      Check Bids\n    </Link>\n  </>\n)\n\nconst CandidateNextStep = (\n  <>\n    <h5>To become a Cyborg you need to submit the Proof of Ink.</h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Proof of Ink (PoI) Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Ink Art\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/home/bids\" className=\"ml-5 btn btn-primary\">\n      Submit Proof of Ink\n    </Link>\n  </>\n)\n\nconst CyborgNextStep = (\n  <>\n    <h5>Enjoy</h5>\n    <Link to=\"/home/bids\" className=\"btn btn-outline-light-grey\">\n      Vouch Bid\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/home/bids\" className=\"ml-5 btn btn-primary\">\n      Vote on Candidates\n    </Link>\n  </>\n)\n\nconst LEVELS: LevelsType = {\n  human: HumanNextStep,\n  bidder: BidderNextStep,\n  candidate: CandidateNextStep,\n  cyborg: CyborgNextStep\n}\n\nconst NextStep = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <StyledP>Next Step</StyledP>\n      {LEVELS[level]}\n    </>\n  )\n}\n\nexport { NextStep }\n","import styled from \"styled-components\"\n\nconst FormattedKSM = (props: { children: any }): JSX.Element => (\n  <>\n    <Value>{props.children}</Value>\n    &nbsp;&nbsp;\n    <Unit>KSM</Unit>\n  </>\n)\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { FormattedKSM }\n","import { Vec } from '@polkadot/types'\nimport { PalletSocietyBid } from '@polkadot/types/lookup'\nimport { useEffect, useState } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { useAccount } from '../../account/AccountContext'\nimport { FormattedKSM } from '../../helpers/FormattedKSM'\nimport { useKusama } from '../../kusama'\n\nconst Bid = () => {\n  const { api } = useKusama()\n  const { activeAccount } = useAccount()\n  const [bidAmount, setBidAmount] = useState<string>('0')\n\n  useEffect(() => {\n    if (api) {\n      api.query.society.bids().then((bids: Vec<PalletSocietyBid>) => {\n        const accountBid = bids.find((bid) => {\n          activeAccount && bid.who.toHuman() === activeAccount.address\n        })\n        if (!accountBid) return setBidAmount('0')\n\n        setBidAmount(accountBid.value.toHuman())\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>My Bid</h4>\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col>\n          <FormattedKSM>{bidAmount}</FormattedKSM>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button>Update</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport { Bid }\n","// @ts-nocheck\n// Copied from: https://github.com/polkadot-js/apps/blob/master/packages/react-hooks/src/useBlockTime.ts\n\nimport type { ApiPromise } from '@polkadot/api'\nimport { BN, BN_ONE, BN_THOUSAND, BN_TWO, bnToBn, extractTime } from '@polkadot/util'\nimport type { Time } from '@polkadot/util/types'\nimport { useMemo } from 'react'\nimport { useKusama } from '../kusama'\n\ntype Result = [number, string, Time]\n\nconst DEFAULT_TIME = new BN(6_000)\n\nconst THRESHOLD = BN_THOUSAND\n\nexport function useBlockTime(blocks: number | BN = BN_ONE, apiOverride?: ApiPromise | null): Result {\n  const { api } = useKusama()\n\n  return useMemo((): Result => {\n    const a = apiOverride || api\n    const blockTime =\n      a.consts.babe?.expectedBlockTime ||\n      a.consts.difficulty?.targetBlockTime ||\n      (a.consts.timestamp?.minimumPeriod.gte(THRESHOLD)\n        ? a.consts.timestamp.minimumPeriod.mul(BN_TWO)\n        : a.query.parachainSystem\n        ? DEFAULT_TIME.mul(BN_TWO)\n        : DEFAULT_TIME)\n    const value = blockTime.mul(bnToBn(blocks)).toNumber()\n    const time = extractTime(Math.abs(value))\n    const { days, hours, minutes, seconds } = time\n    const timeStr = [\n      days ? (days > 1 ? `${days} days` : '1 day') : null,\n      hours ? (hours > 1 ? `${hours} hrs` : '1 hr') : null,\n      minutes ? (minutes > 1 ? `${minutes} mins` : '1 min') : null,\n      seconds ? (seconds > 1 ? `${seconds} s` : '1 s') : null,\n    ]\n      .filter((s): s is string => !!s)\n      .slice(0, 2)\n      .join(' ')\n\n    return [blockTime.toNumber(), `${value < 0 ? '+' : ''}${timeStr}`, time]\n  }, [api, apiOverride, blocks])\n}\n","import { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\nimport styled from 'styled-components'\nimport { useBlockTime } from '../../hooks/useBlockTime'\nimport { useKusama } from '../../kusama'\n\nconst CurrentRoundProgress = (props: { percentageDone: number }): JSX.Element => (\n  <div style={{ width: 100, height: 100 }}>\n    <CircularProgressbar\n      value={props.percentageDone}\n      styles={buildStyles({\n        pathColor: '#E6007A',\n        trailColor: '#fff',\n        strokeLinecap: 'butt',\n      })}\n    />\n  </div>\n)\n\nconst CurrentRound = () => {\n  const { api } = useKusama()\n  const [currentBlock, setCurrentBlock] = useState<number>(0)\n  const [rotationPeriod, setRotationPeriod] = useState<number>(0)\n  const periodBlocksDone = currentBlock % rotationPeriod\n  const periodBlocksLeft = rotationPeriod - periodBlocksDone\n  const percentageDone = 100 - (periodBlocksLeft * 100) / rotationPeriod\n  const [, , time] = useBlockTime(periodBlocksLeft, api)\n  const { days, hours, minutes, seconds } = time\n\n  useEffect(() => {\n    if (api) {\n      const rotationPeriod = api.consts.society.rotationPeriod.toNumber()\n      api.derive.chain.bestNumber((block) => {\n        setCurrentBlock(block.toNumber())\n      })\n      setRotationPeriod(rotationPeriod)\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Current Round</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"auto\">\n          <CurrentRoundProgress percentageDone={percentageDone} />\n        </Col>\n        <Col className=\"ps-0\">\n          <Value>{days}</Value>&nbsp;<Unit>day</Unit>\n          <br />\n          <Value>{hours}</Value>&nbsp;<Unit>hrs.</Unit>\n          <br />\n          <Value>{minutes}</Value>&nbsp;<Unit>mins.</Unit>\n          <br />\n          <Value>{seconds}</Value>&nbsp;<Unit>secs.</Unit>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { CurrentRound }\n","import type { DeriveSociety } from '@polkadot/api-derive/types'\nimport { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { FormattedKSM } from '../../helpers/FormattedKSM'\nimport { useKusama } from '../../kusama'\n\nconst RoundPayout = () => {\n  const { api } = useKusama()\n  const [info, setInfo] = useState<DeriveSociety | any>()\n\n  useEffect(() => {\n    if (api) {\n      api.derive.society.info().then((response) => {\n        setInfo(response)\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Round Payout</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <FormattedKSM>{info?.pot.toHuman().substring(0, 5)}</FormattedKSM>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport { RoundPayout }\n","import { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../../account/AccountContext'\nimport { useConsts } from '../../hooks/useConsts'\nimport { useKusama } from '../../kusama'\n\nconst Circle = ({ active = false }: { active?: boolean }): JSX.Element => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"6\" cy=\"6\" r=\"6\" fill={active ? '#E6007A' : '#FFF'} />\n  </svg>\n)\n\nconst StrikesCounter = (props: { count: number; maxStrikes: number }): JSX.Element => {\n  const strikesArray = Array(props.count)\n    .fill(true)\n    .concat(Array(props.maxStrikes - props.count).fill(false))\n\n  return (\n    <>\n      {strikesArray.map((active, key) => (\n        <Circle key={key} active={active} />\n      ))}\n    </>\n  )\n}\n\nconst Strikes = () => {\n  const { api } = useKusama()\n  const { activeAccount } = useAccount()\n  const [strikes, setStrikes] = useState<number>(0)\n  const { maxStrikes } = useConsts()\n\n  useEffect(() => {\n    if (api) {\n      api.derive.society.members().then((members) => {\n        const account = members.find((member) => {\n          activeAccount && member.accountId.toString() === activeAccount.address\n        })\n        if (!account) return setStrikes(0)\n\n        setStrikes(account.strikes.toNumber())\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Strikes</h4>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <Value>{strikes}</Value>&nbsp;<Unit>/&nbsp;{maxStrikes.toNumber()}</Unit>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <StrikesCounter count={strikes} maxStrikes={maxStrikes.toNumber()} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { Strikes }\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport { reportWebVitals }\n","// @ts-nocheck\n// Copied from: https://github.com/polkadot-js/apps/blob/master/packages/react-hooks/src/useBlockTime.ts\n\nimport type { BalanceOf, BlockNumber, u32, PalletId } from '@polkadot/api'\nimport { useMemo } from 'react'\nimport { useKusama } from '../kusama'\n\ntype SocietyConsts = {\n  candidateDeposit: BalanceOf\n  challengePeriod: BlockNumber\n  maxCandidateIntake: u32\n  maxStrikes: u32\n  palletId: PalletId\n  periodSpend: BalanceOf\n  rotationPeriod: BlockNumber\n  wrongSideDeduction: BalanceOf\n}\n\nexport function useConsts(): SocietyConsts {\n  const { api } = useKusama()\n\n  return useMemo((): SocietyConsts => {\n    const candidateDeposit: BalanceOf = api.consts.society.candidateDeposit\n    const challengePeriod: BlockNumber = api.consts.society.challengePeriod\n    const maxCandidateIntake: u32 = api.consts.society.maxCandidateIntake\n    const maxStrikes: u32 = api.consts.society.maxStrikes\n    const palletId: PalletId = api.consts.society.palletId\n    const periodSpend: BalanceOf = api.consts.society.periodSpend\n    const rotationPeriod: BlockNumber = api.consts.society.rotationPeriod\n    const wrongSideDeduction: BalanceOf = api.consts.society.wrongSideDeduction\n\n    return {\n      candidateDeposit,\n      challengePeriod,\n      maxCandidateIntake,\n      maxStrikes,\n      palletId,\n      periodSpend,\n      rotationPeriod,\n      wrongSideDeduction,\n    }\n  })\n}\n","import { ReactElement } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../../account/AccountContext'\nimport { Bid } from './Bid'\nimport { CurrentRound } from './CurrentRound'\nimport { RoundPayout } from './RoundPayout'\nimport { Strikes } from './Strikes'\n\nconst HumanCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n  </>\n)\nconst BidderCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Bid />\n    </Col>\n  </>\n)\nconst CandidateCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Bid />\n    </Col>\n  </>\n)\nconst CyborgCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Strikes />\n    </Col>\n  </>\n)\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst LEVELS: LevelsType = {\n  human: HumanCurrentRound,\n  bidder: BidderCurrentRound,\n  candidate: CandidateCurrentRound,\n  cyborg: CyborgCurrentRound\n}\n\nconst RotationBar = () => {\n  const { level } = useAccount()\n  return (\n    <StyledDiv className=\"py-4\">\n      <Container>\n        <Row sm={4}>\n          {LEVELS[level]}\n        </Row>\n      </Container>\n    </StyledDiv>\n  )\n}\n\nconst StyledDiv = styled.div`\n  background-color: ${(props) => props.theme.colors.darkGrey};\n`\n\nexport { RotationBar }\n","import { Col, Container, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Level } from '../components/Level'\nimport { LevelNotification } from '../components/LevelNotification'\nimport { NextStep } from '../components/NextStep'\nimport { RotationBar } from '../components/rotation-bar/RotationBar'\n\nconst HomePage = (): JSX.Element => (\n  <>\n    <StyledDiv>\n      <Container>\n        <Row>\n          <Col sm={3}>\n            <Level />\n          </Col>\n          <Col sm={4}>\n            <LevelNotification />\n          </Col>\n          <Col sm={5}>\n            <NextStep />\n          </Col>\n        </Row>\n      </Container>\n    </StyledDiv>\n    <RotationBar />\n  </>\n)\n\nconst StyledDiv = styled.div`\n  height: 67.1vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport { HomePage }\n","export default __webpack_public_path__ + \"static/media/kappa-sigma-mu-title.ca479de5.svg\";","import ThreeCanary from \"@kappasigmamu/canary-component\"\nimport { Col, Row } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport { PrimaryLgButton } from '../components/base'\nimport { fetchAccounts } from '../helpers/fetchAccounts'\nimport KappaSigmaMuTitle from '../static/kappa-sigma-mu-title.svg'\n\nconst choose = (choices: Array<string>) => {\n  const index = Math.floor(Math.random() * choices.length)\n  return choices[index]\n}\n\nconst nodesDataFactory = (n: number) => {\n  const data = []\n  for (let i=0; i<n; i+=1) {\n    data.push({\n      \"id\": Math.floor(Math.random()*100),\n      \"name\": choose([\"Arthur C. Clarke\", \"Douglas Adams\", \"Isaac Asimov\"]),\n      \"level\": choose([\"human\", \"cyborg\"]),\n      \"hash\": choose([\"0x08eded6a76d84e309e3f09705ea2853f\", \"0xdeadbeefe6a76d84e309e3f09705ea28589\"]),\n      // \"img\": choose([\"/assets/t1.jpg\", \"/assets/t2.jpg\"])\n    })\n  }\n  return data\n}\n\nconst nodesData = nodesDataFactory(1500)\n\nconst LandingPage = () => {\n  const navigate = useNavigate()\n  const { activeAccount, setActiveAccount, setAccounts } = useAccount()\n\n  const handlePrimaryButtonClick = () => {\n    if (!activeAccount) {\n      fetchAccounts(setAccounts, setActiveAccount)\n    }\n    navigate('/guide')\n  }\n\n  return (\n    <>\n      <FullPageHeightRow>\n        <div className=\"position-absolute h-100\">\n          <ThreeCanary\n              objectUrl={`./static/canary.glb`}\n              nodes={nodesData}\n          />\n        </div>\n        <CentralizedCol xs={6} />\n        <CentralizedCol xs={6}>\n          <h1>Join the</h1>\n          <KappaSigmaMu src={KappaSigmaMuTitle} alt=\"Kappa Sigma Mu Title\" />\n          <p>\n            <PrimaryLgButton onClick={handlePrimaryButtonClick}>\n              Become a Cyborg\n            </PrimaryLgButton>\n          </p>\n          <p>\n            <Link to=\"/guide\">Cyborg Guide</Link>\n          </p>\n        </CentralizedCol>\n      </FullPageHeightRow>\n    </>\n  )\n}\n\nconst KappaSigmaMu = styled.img`\n  margin: 50px 0;\n  display: block;\n`\n\nconst FullPageHeightRow = styled(Row)`\n  height: 89vh;\n`\n\nconst CentralizedCol = styled(Col)`\n  align-items: center;\n  margin-bottom: auto;\n  margin-top: auto;\n  z-index: 1;\n`\n\nexport { LandingPage }\n","export default __webpack_public_path__ + \"static/media/map-icon.95057c80.svg\";","import { Badge, Col, Container, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Level } from '../components/Level'\nimport { SocialIcons } from '../components/SocialIcons'\nimport MapIcon from '../static/map-icon.svg'\n\nconst WelcomePage = (): JSX.Element => {\n  return (\n    <>\n      <LevelContainer>\n        <Row>\n          <Col><Level /></Col>\n        </Row>\n      </LevelContainer>\n      <StyledContainer>\n        <Row className=\"mb-5\">\n          <Col><Badge pill>WALLET CONNECTED</Badge></Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col><h1>Welcome, Human.</h1></Col>\n        </Row>\n        <Row>\n          <Col>\n            <h4>JOIN THE LOUNGE</h4>\n            <p>Meet other Cyborgs.</p>\n          </Col>\n          <Col>\n            <h4>CHECK THE GAME GUIDE</h4>\n            <p>Learn how to become a Cyborg.</p>\n          </Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col><SocialIcons /></Col>\n          <Col>\n            <Link to=\"/guide\" className=\"btn btn-outline-secondary\" role=\"button\">\n              Cyborg Guide\n              &nbsp;&nbsp;\n              <span className=\"btn-label\">\n                <img src={MapIcon} alt=\"Map Icon\" />\n              </span>\n            </Link>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Link to=\"/home\" className=\"btn btn-primary\" role=\"button\">\n              Begin Journey\n            </Link>\n          </Col>\n        </Row>\n      </StyledContainer>\n    </>\n  )\n}\n\nconst StyledContainer = styled(Container)`\n  position: absolute;\n  width: 564px;\n  height: 492px;\n  border-radius: 12px;\n  background: rgba(52, 58, 64, 0.5);\n  text-align: center;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 59px;\n`\n\nconst LevelContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport { WelcomePage }\n","import { Suspense } from 'react'\nimport { BrowserRouter, Outlet, Route, Routes, useLocation } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { AccountContextProvider } from '../account/AccountContext'\nimport { Navbar } from '../components/Navbar'\nimport { KusamaContextProvider } from '../kusama'\nimport { GlobalStyle } from '../styles/globalStyle'\nimport { Theme } from '../styles/Theme'\nimport { CyborgGuidePage } from './CyborgGuidePage'\nimport { ExplorePage } from './explore/ExplorePage'\nimport { HomePage } from './HomePage'\nimport { LandingPage } from './LandingPage'\nimport { WelcomePage } from './WelcomePage'\n\nconst AppNavigation = () => {\n  const { pathname } = useLocation()\n  const isRoot = !!pathname.match(\"[/]$\")\n\n  return (\n    <>\n      <Navbar\n        showAccount\n        showExploreButton\n        showBrandIcon={!isRoot}\n        showSocialIcons={isRoot || pathname.includes(\"guide\")}\n      />\n      <Outlet />\n    </>\n  )\n}\n\nconst AppRouter = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"\" element={<AppNavigation />}>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/guide\" element={<CyborgGuidePage />} />\n          <Route path=\"/welcome\" element={<WelcomePage />} />\n          <Route path=\"/home\" element={<HomePage />} />\n          <Route path=\"/explore/*\" element={<ExplorePage />} />\n          <Route path=\"*\" element={<>NOT FOUND</>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <KusamaContextProvider>\n      <AccountContextProvider>\n        <ThemeProvider theme={Theme}>\n          <GlobalStyle />\n            <Suspense fallback={<p>ERROR/LOADING...</p>}>\n              <AppRouter />\n            </Suspense>\n        </ThemeProvider>\n      </AccountContextProvider>\n    </KusamaContextProvider>\n  </>\n)\n\nexport { App }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './pages/App'\nimport { reportWebVitals } from './reportWebVitals'\n\nimport './styles/bootstrap.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}