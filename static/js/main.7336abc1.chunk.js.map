{"version":3,"sources":["kusama/config/index.ts","kusama/KusamaContext.tsx","account/AccountContext.tsx","helpers/fetchAccounts.ts","static/kappa-sigma-mu-logo.svg","helpers/truncate.ts","components/AccountSelector.tsx","static/discord-logo.svg","static/element-logo.svg","static/twitter-logo.svg","components/base/index.tsx","components/SocialIcons.tsx","components/Navbar.tsx","styles/globalStyle.ts","styles/Theme.ts","static/mock-canary.svg","pages/CyborgGuidePage.tsx","hooks/useConsts.ts","helpers/humanize.ts","pages/explore/BiddersPage/BiddersList.tsx","pages/explore/BiddersPage/index.tsx","components/FormatBalance.tsx","pages/explore/CandidatesPage/index.tsx","pages/explore/components/NavigationBar.tsx","pages/explore/helpers.ts","pages/explore/MembersPage/MembersList.tsx","pages/explore/MembersPage/index.tsx","pages/explore/ExplorePage.tsx","static/canary-level-1.svg","components/Level.tsx","components/LevelNotification.tsx","components/NextStep.tsx","helpers/FormattedKSM.tsx","components/rotation-bar/Bid.tsx","hooks/useBlockTime.ts","components/rotation-bar/CurrentRound.tsx","reportWebVitals.ts","components/rotation-bar/RoundPayout.tsx","components/rotation-bar/Strikes.tsx","components/rotation-bar/RotationBar.tsx","pages/JourneyPage.tsx","static/kappa-sigma-mu-title.svg","pages/LandingPage.tsx","static/map-icon.svg","pages/WelcomePage.tsx","pages/App.tsx","index.tsx"],"names":["configEnv","require","config","RPC","jsonrpc","SOCKET","PROVIDER_SOCKET","TYPES","types","INIT_STATE","api","apiError","apiState","keyring","keyringState","reducer","state","action","type","payload","KusamaContext","React","createContext","KusamaContextProvider","props","useReducer","dispatch","provider","WsProvider","ApiPromise","rpc","on","isReady","then","err","connect","Provider","value","children","useKusama","useContext","storedActiveAccount","JSON","parse","localStorage","getItem","storedAccounts","activeAccount","setActiveAccount","accounts","setAccounts","level","AccountContext","AccountContextProvider","useState","setLevel","loading","query","society","useEffect","setLevelCheckingAccounts","forEach","account","toString","address","bids","response","map","who","candidates","members","useAccount","fetchAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","meta","name","prefix","DEVELOPMENT_KEYRING","Keyring","ss58Format","encodeAddress","setItem","stringify","console","error","_fetchAccounts","truncateMiddle","str","strLength","separator","length","separatorLength","strLengthWithoutSeparator","beginStr","Math","ceil","endStr","floor","substring","LEVELSTATUS","human","bidder","candidate","cyborg","Title","className","style","marginTop","size","theme","fontSize","SelectedAccountDiv","LevelStatusDiv","toUpperCase","Main","StyledDropdownButton","variant","onSelect","eventKey","filter","acc","includes","onChange","title","option","Dropdown","Item","href","AccountSelector","Spinner","animation","styled","div","colors","grey","primary","DropdownButton","darkGrey","DataHeaderRow","Row","lightGrey","DataRow","white","ExternalLink","attrs","target","rel","PrimaryButton","Button","PrimaryLgButton","SocialIcons","src","DiscordLogo","alt","ElementLogo","TwitterLogo","color","Navbar","showAccount","showBrandIcon","showExploreButton","showSocialIcons","Container","Nav","Link","to","as","BrandPlaceholder","height","width","NavbarBrand","Brand","KappaSigmaMu","AccountNavbar","onClick","GlobalStyle","createGlobalStyle","Theme","darkBg","lightBg","secondary","black","SocietyGuideLink","TattooRulesLink","SocietyElementLink","Motion186Link","ThirdGenerationLink","BrandingDriveLink","CodeRepositoryLink","TrelloLink","CyborgGuidePage","GuideTitleRow","GuideTitle","xs","lg","Col","GuideRow","CanaryImg","Canary","VerticalLine","img","useConsts","useMemo","candidateDeposit","consts","challengePeriod","maxCandidateIntake","maxStrikes","palletId","periodSpend","rotationPeriod","wrongSideDeduction","humanizeBidKind","bid","isDeposit","isVouch","accountId","asVouch","truncate","humanizeBidValue","asDeposit","toHuman","BiddersList","kind","BiddersPage","setBids","DEFAULT_KSM_PROPERTIES","applyFormatBalance","withCurrency","isShort","decimals","token","formatBalance","forceUnit","withSi","split","postfix","_isShort","unitPost","withUnit","major","rest","minor","unit","slice","FormatBalance","balance","CandidatesPage","NavigationBar","StyledNav","defaultActiveKey","StyledNavItem","NavLink","candidatesMap","isSuspended","voters","skeptics","Promise","all","votes","entries","votesStorage","voteOption","args","candidateAccountId","voterAccountId","isSome","key","unwrap","isSkeptic","push","Object","values","sortSocietyMembersArray","b","isDefender","isHead","isFounder","isDefenderVoter","StyledDataRow","MembersList","member","Badge","pill","bg","MembersPage","ExplorePage","setCandidates","info","setInfo","setMembers","derive","responseMembers","hasPayouts","payouts","hasStrikes","strikes","isEmpty","defender","eq","founder","head","vote","isWarned","gt","strikesCount","toNumber","sort","buildSocietyMembersArray","responseInfo","responseCandidates","buildSocietyCandidatesArray","catch","path","element","LEVELS","badge","canary","CanarySvgLevel1","Level","NoFocus","h5","StyledP","p","DefaultLevelNotification","LevelNotification","NextStep","FormattedKSM","Value","Unit","span","Bid","bidAmount","setBidAmount","accountBid","find","DEFAULT_TIME","BN","THRESHOLD","BN_THOUSAND","onPerfEntry","CurrentRoundProgress","percentageDone","styles","buildStyles","pathColor","trailColor","strokeLinecap","CurrentRound","currentBlock","setCurrentBlock","setRotationPeriod","periodBlocksLeft","blocks","BN_ONE","apiOverride","blockTime","babe","expectedBlockTime","difficulty","targetBlockTime","timestamp","minimumPeriod","gte","mul","BN_TWO","parachainSystem","bnToBn","time","extractTime","abs","days","hours","minutes","seconds","timeStr","s","join","useBlockTime","chain","bestNumber","block","sm","RoundPayout","pot","Circle","active","viewBox","fill","xmlns","cx","cy","r","StrikesCounter","strikesArray","Array","count","concat","Strikes","setStrikes","RotationBar","StyledDiv","JourneyPage","StyledCol","LandingPage","navigate","useNavigate","FullPageHeightRow","objectUrl","nodes","id","CentralizedCol","KappaSigmaMuTitle","WelcomePage","LevelContainer","StyledContainer","role","MapIcon","AppNavigation","pathname","useLocation","isRoot","match","AppRouter","App","fallback","ReactDOM","render","StrictMode","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.7336abc1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n\n// Make sure you copied `./src/kusama/config/development.json.sample` to `./src/kusama/config/development.json`\n// Use `\"PROVIDER_SOCKET\": \"wss://kusama-rpc.polkadot.io\"` if you want to connect to production RPC\nconst configEnv = require(`./${process.env.NODE_ENV}.json`)\nconst config = { ...configEnv }\n\nexport { config }\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\n\nimport { ApiPromise, WsProvider } from '@polkadot/api'\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc'\nimport React, { useReducer, useContext } from 'react'\nimport { config } from './config'\n\nconst RPC = { ...jsonrpc, ...config.RPC }\nconst SOCKET = config.PROVIDER_SOCKET\nconst TYPES = config.types\n\nconst INIT_STATE = {\n  api: null,\n  apiError: null,\n  apiState: null,\n  keyring: {},\n  keyringState: null,\n}\n\ntype StateType = {\n  api: ApiPromise | null\n  apiError: string | null\n  apiState: string | null\n}\n\ntype ActionType =\n  | { type: 'CONNECTING' }\n  | { type: 'CONNECTED'; payload: ApiPromise }\n  | { type: 'READY' }\n  | { type: 'DISCONNECTED' }\n  | { type: 'ERROR'; payload: any }\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n  switch (action.type) {\n    case 'CONNECTING':\n      return { ...state, apiState: 'CONNECTING' }\n    case 'CONNECTED':\n      return { ...state, api: action.payload, apiState: 'CONNECTED' }\n    case 'READY':\n      return { ...state, apiState: 'READY' }\n    case 'DISCONNECTED':\n      return { ...state, apiState: 'DISCONNECTED' }\n    case 'ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload }\n  }\n}\n\nfunction connect(state: StateType, dispatch: React.Dispatch<ActionType>) {\n  const { apiState } = state\n\n  if (apiState && apiState !== 'DISCONNECTED') return\n\n  dispatch({ type: 'CONNECTING' })\n\n  const provider = new WsProvider(SOCKET)\n  const api = new ApiPromise({ provider, types: TYPES, rpc: RPC })\n\n  api.on('connected', () => {\n    dispatch({ type: 'CONNECTED', payload: api })\n    api.isReady.then(() => dispatch({ type: 'READY' }))\n  })\n  api.on('disconnected', () => dispatch({ type: 'DISCONNECTED' }))\n  api.on('error', (err) => dispatch({ type: 'ERROR', payload: err }))\n  api.on('ready', () => dispatch({ type: 'READY' }))\n}\n\nconst KusamaContext = React.createContext<StateType>(INIT_STATE)\n\nfunction KusamaContextProvider(props: { children: JSX.Element }) {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE)\n\n  connect(state, dispatch)\n\n  return <KusamaContext.Provider value={state}>{props.children}</KusamaContext.Provider>\n}\n\nconst useKusama = () => ({ ...useContext(KusamaContext) })\n\nexport { KusamaContextProvider, useKusama }\n","import { Vec } from '@polkadot/types'\nimport { AccountId32 } from '@polkadot/types/interfaces'\nimport { PalletSocietyBid } from '@polkadot/types/lookup'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useKusama } from '../kusama'\n\n// eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\nconst storedActiveAccount = JSON.parse(localStorage.getItem('activeAccount')!) || ''\n// eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\nconst storedAccounts = JSON.parse(localStorage.getItem('accounts')!) || []\n\nconst INIT_STATE = {\n  activeAccount: storedActiveAccount,\n  setActiveAccount: () => ({}),\n  accounts: storedAccounts,\n  setAccounts: () => ({}),\n  level: 'human'\n}\n\ntype StateType = {\n  level: string,\n  setActiveAccount: (account: accountType) => void\n  activeAccount: accountType\n  accounts: accountType[]\n  setAccounts: (accounts: accountType[]) => void\n}\n\nconst AccountContext = React.createContext<StateType>(INIT_STATE)\n\nconst AccountContextProvider = ({ children } : any) => {\n  const { api } = useKusama()\n  const [activeAccount, setActiveAccount] = useState<accountType>(storedActiveAccount)\n  const [accounts, setAccounts] = useState<accountType[]>(storedAccounts)\n  const [level, setLevel] = useState('human')\n\n  const loading = !api?.query?.society\n\n  useEffect(() => {\n    const setLevelCheckingAccounts = (accounts: AccountId32[], level: string) => {\n      setLevel('human')\n      accounts.forEach((account: AccountId32) => {\n        if (account.toString() === activeAccount.address) {\n          setLevel(level)\n        }\n      })\n    }\n\n    if (api) {\n      api.query.society.bids().then((response: Vec<PalletSocietyBid>) => {\n        setLevelCheckingAccounts(response.map(account => account.who), 'bidder')\n      })\n\n      api.query.society.candidates().then((response: Vec<PalletSocietyBid>) => {\n        setLevelCheckingAccounts(response.map(account => account.who), 'candidate')\n      })\n\n      api.query.society.members().then((response: Vec<AccountId32>) => {\n        setLevelCheckingAccounts(response, 'cyborg')\n      })\n    }\n  }, [api?.query?.society, activeAccount])\n\n  const content = loading\n    ? <></>\n    : <AccountContext.Provider value={{ level, activeAccount, setActiveAccount, accounts, setAccounts }}>\n        {children}\n      </AccountContext.Provider>\n\n  return content\n}\n\nconst useAccount = () => ({ ...useContext(AccountContext) })\n\nexport { AccountContextProvider, useAccount }\n","import { web3Accounts, web3Enable } from '@polkadot/extension-dapp'\nimport Keyring from '@polkadot/keyring'\nimport { config } from '../kusama/config'\n\nconst fetchAccounts = (\n  setAccounts: (accounts: { name: string | undefined; address: string }[]) => void,\n  setActiveAccount: (account: { name: string | undefined; address: string }) => void,\n) => {\n  async function _fetchAccounts() {\n    try {\n      await web3Enable(config.APP_NAME)\n      let allAccounts = await web3Accounts()\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: meta.name },\n      }))\n\n      const kusamaPrefix = 2\n      const genericPrefix = 42\n\n      const prefix = config.DEVELOPMENT_KEYRING ? genericPrefix : kusamaPrefix\n\n      const keyring = new Keyring({ ss58Format: prefix, type: 'ed25519' })\n\n      const accounts = allAccounts.map((account) => ({\n        name: account.meta.name,\n        address: keyring.encodeAddress(account.address),\n      }))\n\n      setAccounts(accounts)\n      localStorage.setItem(\"accounts\", JSON.stringify(accounts))\n\n      setActiveAccount(accounts[0])\n      localStorage.setItem(\"activeAccount\", JSON.stringify(accounts[0]))\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  _fetchAccounts()\n}\n\nexport { fetchAccounts }\n","export default __webpack_public_path__ + \"static/media/kappa-sigma-mu-logo.192858ee.svg\";","function truncate(str: string, strLength = 7) {\n  if (!str) { return '' }\n  return str.length > 10 ? str.substring(0, strLength) + '...' : str\n}\n\nfunction truncateMiddle(str: string, strLength = 15, separator = '...') {\n  if (str.length <= strLength) return str\n\n  const separatorLength = separator.length\n  const strLengthWithoutSeparator = strLength - separatorLength\n  const beginStr = Math.ceil(strLengthWithoutSeparator/2)\n  const endStr = Math.floor(strLengthWithoutSeparator/2)\n\n  return str.substring(0, beginStr) +\n         separator +\n         str.substring(str.length - endStr)\n}\n\nexport { truncate, truncateMiddle }\n","import Identicon from '@polkadot/react-identicon'\nimport { Dropdown, DropdownButton, Spinner } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport { truncateMiddle } from '../helpers/truncate'\nimport { useKusama } from '../kusama'\n\ninterface LevelStatusType {\n  [key: string]: string\n}\n\nconst LEVELSTATUS: LevelStatusType = {\n  human: 'WAITING BID',\n  bidder: 'BID SUBMITTED',\n  candidate: 'WAITING POI',\n  cyborg: ''\n}\n\nconst Title = ({ activeAccount }: { activeAccount: accountType }) => {\n  const { level } = useAccount()\n  const account = activeAccount.name\n\n  return (\n    <>\n      <div className='align-top d-inline-block me-3' style={{ marginTop: 6 }}>\n        <Identicon\n          value={activeAccount.address}\n          size={32}\n          theme={'polkadot'}\n        />\n      </div>\n\n      <label style={{ fontSize: '12px' }}>\n        <SelectedAccountDiv className=\"text-start mb-1\">\n          {truncateMiddle(account || '')}\n        </SelectedAccountDiv>\n        <LevelStatusDiv>\n          <label className=\"pe-3\">JOURNEY: {level.toUpperCase()}</label>\n          <label>{LEVELSTATUS[level]}</label>\n        </LevelStatusDiv>\n      </label>\n    </>\n  )\n}\n\nconst Main = () => {\n  const { activeAccount, setActiveAccount, accounts } = useAccount()\n\n  const onChange = (account: string) => {\n    const activeAccount = accounts.filter(acc => acc.address.includes(account))[0]\n    setActiveAccount(activeAccount)\n    localStorage.setItem(\"activeAccount\", JSON.stringify(activeAccount))\n  }\n\n  return (\n    <StyledDropdownButton\n      variant=\"outline-light-grey\"\n      onSelect={(eventKey: string) => onChange(eventKey)}\n      title={<Title activeAccount={activeAccount} />}\n    >\n      {accounts.map((option: { name: string | undefined; address: string }) => (\n        <Dropdown.Item style={{ fontSize: '12px' }} eventKey={option.address} key={option.address} href=\"#\">\n          {option.name ? option.name : option.address}\n        </Dropdown.Item>\n      ))}\n    </StyledDropdownButton>\n  )\n}\n\nconst AccountSelector = () => {\n  const { api } = useKusama()\n  const loading = !api?.query\n  return loading ? <Spinner animation=\"border\" variant=\"primary\" /> : <Main />\n}\n\nconst LevelStatusDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  label {\n    color: ${(props) => props.theme.colors.grey};\n    font-weight: 700;\n  }\n`\n\nconst SelectedAccountDiv = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n  font-size: 14px;\n`\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  background-color: ${(props) => props.theme.colors.darkGrey};\n  & ::after {\n    margin-bottom: 10px;\n  }\n`\n\nexport { AccountSelector }\n","export default __webpack_public_path__ + \"static/media/discord-logo.023684f9.svg\";","export default __webpack_public_path__ + \"static/media/element-logo.9a5a405c.svg\";","export default __webpack_public_path__ + \"static/media/twitter-logo.7a9247c3.svg\";","import { Button, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst DataHeaderRow = styled(Row)`\n  line-height: 3;\n\n  & .text-end {\n    padding-right: 36px;\n  }\n\n  * {\n    color: ${(props) => props.theme.colors.lightGrey};\n  }\n`\n\nconst DataRow = styled(DataHeaderRow)`\n  background-color: ${(props) => props.theme.colors.darkGrey};\n  border-radius: 6px;\n  margin-top: 10px;\n\n  * {\n  color: ${(props) => props.theme.colors.white};\n}\n`\n\nconst ExternalLink = styled.a.attrs(() => ({\n  target: '_blank',\n  rel: 'noreferrer'\n}))``\n\nconst PrimaryButton = styled(Button).attrs(() => ({ variant: 'primary' }))``\nconst PrimaryLgButton = styled(PrimaryButton).attrs(() => ({ size: 'lg' }))``\n\nexport {\n  DataHeaderRow,\n  DataRow,\n  ExternalLink,\n  PrimaryButton,\n  PrimaryLgButton,\n}\n","import DiscordLogo from '../static/discord-logo.svg'\nimport ElementLogo from '../static/element-logo.svg'\nimport TwitterLogo from '../static/twitter-logo.svg'\nimport { ExternalLink } from './base'\n\nconst SocialIcons = () => (\n  <div className='me-2'>\n    <ExternalLink href=\"https://discord.gg/9AWjTf8wSk\">\n      <img src={DiscordLogo} alt=\"Discord Logo\" />\n    </ExternalLink>\n    &nbsp;\n    <ExternalLink href=\"https://matrix.to/#/!BUmiAAnAYSRGarqwOt:matrix.parity.io?via=matrix.parity.io\">\n      <img src={ElementLogo} alt=\"Element Logo\" />\n    </ExternalLink>\n    &nbsp;\n    <ExternalLink href=\"https://twitter.com/kusamanetwork\">\n      <img src={TwitterLogo} alt=\"Twitter Logo\" style={{color: 'red'}} />\n    </ExternalLink>\n  </div>\n)\n\nexport { SocialIcons }\n","import { Button, Container, Nav, Navbar as RBNavbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useAccount } from '../account/AccountContext'\nimport { fetchAccounts } from '../helpers/fetchAccounts'\nimport KappaSigmaMu from '../static/kappa-sigma-mu-logo.svg'\nimport { AccountSelector } from './AccountSelector'\nimport { SocialIcons } from './SocialIcons'\n\nconst Navbar = ({\n  showAccount=false,\n  showBrandIcon=false,\n  showExploreButton=false,\n  showSocialIcons=false,\n}: NavRouteProps) => (\n  <RBNavbar className=\"pt-4\">\n    <Container>\n      <Nav>{showBrandIcon ? <NavbarBrand /> : <BrandPlaceholder />}</Nav>\n      <Nav className=\"align-items-center align-self-center\">\n        {showExploreButton ? <Nav.Link to=\"/explore\" as={Link}>Explore</Nav.Link> : <></>}\n        &nbsp;\n        {showSocialIcons ? <SocialIcons /> : <></>}\n        &nbsp;\n        {showAccount ? <AccountNavbar /> : <></>}\n      </Nav>\n    </Container>\n  </RBNavbar>\n)\n\nconst BrandPlaceholder = () => (\n  <div style={{ height: 82, width: 106 }}></div>\n)\n\nconst NavbarBrand = () => (\n  <RBNavbar.Brand as={Link} to=\"/\">\n    <img width={90} src={KappaSigmaMu} alt=\"KappaSigmaMu Logo\" />\n  </RBNavbar.Brand>\n)\n\nconst AccountNavbar = () => {\n  const { activeAccount, setActiveAccount, setAccounts } = useAccount()\n\n  return activeAccount\n    ? <AccountSelector />\n    : (\n      <Button variant=\"outline-secondary\" onClick={() => fetchAccounts(setAccounts, setActiveAccount)}>\n        Connect Wallet\n      </Button>\n    )\n}\n\nexport { Navbar }\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    color: white;\n  }\n\n  html {\n    background-color: #212529;\n    font-family: Roboto, sans-serif !important;\n    font-style: normal;\n  }\n\n  body {\n    background-color: #212529;\n  }\n\n  h1 {\n    font-size: 36px;\n    font-weight: bold;\n  }\n\n  h4 {\n    font-size: 16px;\n    font-weight: bold;\n  }\n\n  h2, h3, h4, h5 {\n    color: white;\n  }\n\n  a {\n    color: #01ffff;\n  }\n\n  .navbar-light .navbar-nav .nav-link {\n    color: #01ffff;\n  }\n\n  p {\n    color: #c4c4c4;\n  }\n`\n\nexport { GlobalStyle }\n","import { DefaultTheme } from 'styled-components'\n\nconst Theme: DefaultTheme = {\n  darkBg: '#212529',\n  lightBg: '#ffffff',\n\n  colors: {\n    primary: '#E6007A',\n    secondary: '#01FFFF',\n    white: '#FFFFFF',\n    black: '#212529',\n    grey: '#ced4da',\n    lightGrey: '#6c757d',\n    darkGrey: '#343A40',\n  },\n}\n\nexport { Theme }\n","export default __webpack_public_path__ + \"static/media/mock-canary.d3390cc2.svg\";","import { Col, Container } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { ExternalLink } from '../components/base'\nimport Canary from '../static/mock-canary.svg'\n\nconst SocietyGuideLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://wiki.polkadot.network/docs/maintain-guides-society-kusama',\n}))`\n  font-size: 24px;\n  font-weight: 700;\n  text-decoration: none;\n`\n\nconst TattooRulesLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://polkascan.io/kusama/transaction/0x948d3a4378914341dc7af9220a4c73acb2b3f72a70f14ee8089799da16d94c17',\n}))`\n  text-decoration: none;\n`\n\nconst SocietyElementLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://riot.im/app/#/room/#kappasigmamulounge:matrix.parity.io',\n}))`\n  text-decoration: none;\n`\n\nconst Motion186Link = styled(ExternalLink).attrs(() => ({\n  href: 'https://kusama.polkassembly.io/motion/186',\n}))`\n  text-decoration: none;\n`\n\nconst ThirdGenerationLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://www.youtube.com/watch?v=-JfQ2vCipWU',\n}))`\n  text-decoration: none;\n`\n\nconst BrandingDriveLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://drive.google.com/drive/u/1/folders/1ReG63yRvPgIRRyryDTbrACHELcZoMkA3',\n}))`\n  text-decoration: none;\n`\n\nconst CodeRepositoryLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://github.com/KappaSigmaMu',\n}))`\n  text-decoration: none;\n`\n\nconst TrelloLink = styled(ExternalLink).attrs(() => ({\n  href: 'https://trello.com/b/aqOYaoD0/ksm-society-website',\n}))`\n  text-decoration: none;\n`\n\nconst CyborgGuidePage = () => (\n  <>\n    <Container>\n      <GuideTitleRow>\n        <GuideTitle xs lg=\"6\" className=\"display-1 text-uppercase pt-5\">\n          Cyborg Guide\n        </GuideTitle>\n        <Col className=\"text-uppercase text-end ms-auto pt-5 d-inline-block\">\n          <p>\n            <SocietyGuideLink>Kusama society guide</SocietyGuideLink>\n          </p>\n          <p>\n            <TattooRulesLink>Tattoo rules</TattooRulesLink>\n          </p>\n          <p>\n            <Motion186Link>Motion 186</Motion186Link>\n          </p>\n          <p>\n            <ThirdGenerationLink>The Third Generation</ThirdGenerationLink>\n          </p>\n          <p>\n            <BrandingDriveLink>Branding Drive</BrandingDriveLink>\n          </p>\n          <p>\n            <CodeRepositoryLink>Code Repository</CodeRepositoryLink>\n          </p>\n          <p>\n            <TrelloLink>Trello</TrelloLink>\n          </p>\n        </Col>\n      </GuideTitleRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col>\n          <div className=\"h1 text-uppercase font-weight-bold\">\n            The journey\n          </div>\n          <p className=\"mb-1\">\n            To become a Cyborg means to get a membership in the Kappa Sigma Mu\n            Society.\n          </p>\n          <div className=\"mb-5\">\n            <SocietyGuideLink>You can learn more about it here.</SocietyGuideLink>\n          </div>\n          <CanaryImg src={Canary} className=\"float-end\" alt=\"Canary\" />\n        </Col>\n      </GuideRow>\n      <VerticalLine />\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 1\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Human</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Connect your wallet</p>\n          </strong>\n          <p>\n            You start out as a Human, with your Polkadot Wallet connected.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 2\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Bidder</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Place a Bid</p>\n          </strong>\n          <p>\n            Then you must place a bid. Your bid is the KSM value you want to\n            receive for getting your Cyborg Tattoo, or Proof of Ink (PoI).\n            This process will require some fees.\n          </p>\n          <strong>\n            <p className=\"mb-1\">Get your Bid Accepted</p>\n          </strong>\n          <p>\n            You must do this inside a time frame, the Round. Your bid will\n            only get accepted if it’s between the smallest bids which sum is\n            below the pot value of the round. It is like a reverse auction.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 3\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Candidate</div>\n        </Col>\n      </GuideRow>\n      <GuideRow className=\"mb-5\">\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Becoming a Candidate</p>\n          </strong>\n          <p className=\"mb-1\">\n            When your bid gets accepted, you become a Candidate. Now it’s time\n            to get tattoed!\n          </p>\n          <p>\n            <TattooRulesLink>See the rules for your PoI here.</TattooRulesLink>\n          </p>\n          <strong>\n            <p className=\"mb-1\">Your tattoo, the Proof of Ink (PoI)</p>\n          </strong>\n          <p>\n            After getting your PoI, it’s time to show it to the world! You can\n            submit a photo or video of it&nbsp;\n            <SocietyElementLink>here on our Kappa Sigma Mu Lounge.</SocietyElementLink>\n          </p>\n          <strong>\n            <p className=\"mb-1\">Getting votes on your Proof of Ink</p>\n          </strong>\n          <p>\n            Once it is submitted, the Cyborgs can vote for your approval.\n            You’re almost there! Just be careful with your timeframe, you have\n            only one round to get the PoI <b>and</b> get voted.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n    <Container>\n      <GuideRow>\n        <Col xs lg=\"2\">\n          <span className=\"badge rounded-pill bg-primary text-uppercase\">\n            Level 4\n          </span>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg=\"2\" className=\"mb-2\">\n          <div className=\"h1 text-decoration-underline\">Cyborg</div>\n        </Col>\n      </GuideRow>\n      <GuideRow>\n        <Col xs lg={6}>\n          <strong>\n            <p className=\"mb-1\">Becoming a Cyborg</p>\n          </strong>\n          <p>\n            Once the round is up, one random vote will decide if you are a\n            Cyborg or not. It’s not the majority of votes! Still, the most you\n            get approved, the better are your chances.\n          </p>\n          <strong>\n            <p className=\"mb-1\">\n              Congrats! You are now a Society member. You can vote, be a\n              Skeptic or a Defender\n            </p>\n          </strong>\n          <p>\n            As a Cyborg, you can now vote on new Candidates. If you are a\n            Skeptic in the Round, you must vote, otherwise you get a strike.\n            10 strikes eliminate you from the Society. Cyborgs also can be\n            requested to show their PoI again, as Defenders, to prove they\n            still have their PoI.\n          </p>\n          <strong>\n            <p className=\"mb-1\">Request a Payout</p>\n          </strong>\n          <p>\n          Once you become a Cyborg, there is a period to wait until you\n          can request your payout, the bid you placed. Once this period\n          is up, you can request it here on this website.\n          </p>\n        </Col>\n      </GuideRow>\n    </Container>\n  </>\n)\n\nconst GuideRow = styled(Container)`\n  padding-left: 12px;\n  padding-bottom: 20px;\n`\n\nconst GuideTitleRow = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 12px;\n  padding-bottom: 20px;\n`\n\nconst GuideTitle = styled(Col)`\n  font-size: 450%;\n  color: white;\n  font-weight: bolder;\n  display: inline-block;\n`\n\nconst VerticalLine = styled.div`\n  border-left: 2px solid grey;\n  margin-left: -10px;\n  height: 1600px;\n  position: absolute;\n  z-index: 3;\n`\n\nconst CanaryImg = styled.img`\n  bottom: 30px;\n  width: 50%;\n`\n\nexport { CyborgGuidePage }\n","// @ts-nocheck\n// Copied from: https://github.com/polkadot-js/apps/blob/master/packages/react-hooks/src/useBlockTime.ts\n\nimport type { BalanceOf, BlockNumber, u32, PalletId } from '@polkadot/api'\nimport { useMemo } from 'react'\nimport { useKusama } from '../kusama'\n\ntype SocietyConsts = {\n  candidateDeposit: BalanceOf\n  challengePeriod: BlockNumber\n  maxCandidateIntake: u32\n  maxStrikes: u32\n  palletId: PalletId\n  periodSpend: BalanceOf\n  rotationPeriod: BlockNumber\n  wrongSideDeduction: BalanceOf\n}\n\nexport function useConsts(): SocietyConsts {\n  const { api } = useKusama()\n\n  return useMemo((): SocietyConsts => {\n    const candidateDeposit: BalanceOf = api.consts.society.candidateDeposit\n    const challengePeriod: BlockNumber = api.consts.society.challengePeriod\n    const maxCandidateIntake: u32 = api.consts.society.maxCandidateIntake\n    const maxStrikes: u32 = api.consts.society.maxStrikes\n    const palletId: PalletId = api.consts.society.palletId\n    const periodSpend: BalanceOf = api.consts.society.periodSpend\n    const rotationPeriod: BlockNumber = api.consts.society.rotationPeriod\n    const wrongSideDeduction: BalanceOf = api.consts.society.wrongSideDeduction\n\n    return {\n      candidateDeposit,\n      challengePeriod,\n      maxCandidateIntake,\n      maxStrikes,\n      palletId,\n      periodSpend,\n      rotationPeriod,\n      wrongSideDeduction,\n    }\n  })\n}\n","import type { PalletSocietyBidKind } from '@polkadot/types/lookup'\nimport { truncate } from './truncate'\n\nfunction humanizeBidKind(bid: Partial<PalletSocietyBidKind>) {\n  if (!bid) { return '<UNKNOWN KIND>' }\n\n  if (bid.isDeposit) {\n    return 'Deposit'\n  } else if (bid.isVouch) {\n    const accountId = bid.asVouch?.[0] || ''\n    return `Vouch: ${truncate(accountId.toString())}`\n  } else {\n    return '<UNKNOWN KIND>'\n  }\n}\n\nfunction humanizeBidValue(bid: Partial<PalletSocietyBidKind>) {\n  if (!bid) { return '<UNKNOWN VALUE>' }\n\n  if (bid.isDeposit) {\n    return bid.asDeposit?.toHuman()\n  } else if (bid.isVouch) {\n    return bid.asVouch?.[1].toHuman()\n  } else {\n    return '<UNKNOWN VALUE>'\n  }\n}\n\nexport { humanizeBidKind, humanizeBidValue }\n","import Identicon from '@polkadot/react-identicon'\nimport { Col } from 'react-bootstrap'\nimport { DataHeaderRow, DataRow } from '../../../components/base'\nimport { humanizeBidKind, humanizeBidValue } from '../../../helpers/humanize'\nimport { truncateMiddle } from '../../../helpers/truncate'\n\nconst BiddersList = ({ bids }: { bids: any }): JSX.Element => (\n  <>\n    <DataHeaderRow>\n      <Col xs={1} className=\"text-center\">#</Col>\n      <Col xs={4} className=\"text-start\">Wallet Hash</Col>\n      <Col xs={5} className=\"text-start\">Bid Kind</Col>\n      <Col xs={2} className=\"text-end\">Value</Col>\n    </DataHeaderRow>\n    {bids.map((bid: any) => (\n      <DataRow key={bid.who?.toString()}>\n        <Col xs={1} className=\"text-center\">\n          <Identicon value={bid.who} size={32} theme={'polkadot'} />\n        </Col>\n        <Col xs={4} className=\"text-start text-truncate\">\n          {truncateMiddle(bid.who?.toString())}\n        </Col>\n        <Col xs={5} className=\"text-start text-truncate\">\n          {humanizeBidKind(bid.kind)}\n        </Col>\n        <Col xs={2} className=\"text-end\">\n          {humanizeBidValue(bid.kind)}\n        </Col>\n      </DataRow>\n    ))}\n  </>\n)\n\nexport { BiddersList }\n","import type { Vec } from '@polkadot/types'\nimport type { PalletSocietyBid } from '@polkadot/types/lookup'\nimport { useEffect, useState } from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { useKusama } from '../../../kusama'\nimport { BiddersList } from './BiddersList'\n\nconst BiddersPage = (): JSX.Element => {\n  const { api } = useKusama()\n  const [bids, setBids] = useState<Vec<PalletSocietyBid> | []>([])\n\n  const loading = !api?.query?.society\n\n  useEffect(() => {\n    if (!loading) {\n      api.query.society.bids().then((response: Vec<PalletSocietyBid>) => {\n        setBids(response)\n      })\n    }\n  }, [api?.query?.society])\n\n  const content = loading ? <Spinner animation=\"border\" variant=\"primary\" /> : <BiddersList bids={bids} />\n\n  return (content)\n}\n\nexport { BiddersPage }\n","import type { Compact } from '@polkadot/types'\nimport type { Balance } from '@polkadot/types/interfaces'\nimport { formatBalance } from '@polkadot/util'\nimport type BN from 'bn.js'\nimport React from 'react'\n\nconst DEFAULT_KSM_PROPERTIES: [number, string] = [12, 'KSM']\nconst M_LENGTH = 6 + 1\nconst K_LENGTH = 3 + 1\n\ntype ValueType = Compact<any> | BN | string\n\nconst applyFormatBalance = (value: ValueType, withCurrency = true, isShort = false): React.ReactNode => {\n  const [decimals, token] = DEFAULT_KSM_PROPERTIES\n  const [prefix, postfix] = formatBalance(value, { decimals, forceUnit: '-', withSi: false }).split('.')\n  const _isShort = isShort || (prefix.length >= K_LENGTH)\n  const unitPost = withCurrency ? token : ''\n\n  if (prefix.length > M_LENGTH) {\n    const [major, rest] = formatBalance(value, { decimals, withUnit: false }).split('.')\n    const minor = rest.substring(0, 4)\n    const unit = rest.substring(4)\n\n    return <>\n      <span>{major}.</span>\n      <span>{minor}</span>\n      <span>{unit}{unit ? unitPost : ` ${unitPost}`}</span>\n    </>\n  }\n\n  return <>\n    <span>{`${prefix}${_isShort ? '' : '.'}`}</span>\n    <span>{!_isShort && `0000${postfix || ''}`.slice(-4)}</span>\n    <span> {unitPost}</span>\n  </>\n}\n\ntype FormatBalanceProps = { balance: Balance, withCurrency?: boolean, isShort?: boolean}\n\nconst FormatBalance = ({ balance, withCurrency = true, isShort = false }: FormatBalanceProps): JSX.Element => (\n  <>{applyFormatBalance(balance, withCurrency, isShort)}</>\n)\n\nexport { applyFormatBalance, FormatBalance }\n","import { ApiPromise } from '@polkadot/api'\nimport { DeriveSocietyCandidate } from '@polkadot/api-derive/types'\nimport Identicon from '@polkadot/react-identicon'\nimport { Col, Spinner } from 'react-bootstrap'\nimport { DataHeaderRow, DataRow } from '../../../components/base'\nimport { FormatBalance } from '../../../components/FormatBalance'\nimport { truncateMiddle } from '../../../helpers/truncate'\n\ntype CandidatesPageProps = {\n  api: ApiPromise | null,\n  candidates: SocietyCandidate[]\n}\n\nconst CandidatesPage = ({ api, candidates }: CandidatesPageProps): JSX.Element => {\n  const loading = !api?.query?.society\n  const content = loading\n    ? <Spinner animation=\"border\" variant=\"primary\" />\n    : <>\n      <DataHeaderRow>\n        <Col xs={1} className=\"text-start\">#</Col>\n        <Col xs={3} className=\"text-start\">Wallet Hash</Col>\n        <Col className=\"text-start\">Bid Kind</Col>\n        <Col></Col>\n        <Col></Col>\n      </DataHeaderRow>\n\n      {candidates.length > 0\n        ? candidates.map((candidate: DeriveSocietyCandidate) => (\n          <DataRow key={candidate.accountId.toString()}>\n            <Col xs={1} className=\"text-start\">\n              <Identicon value={candidate.accountId} size={32} theme={'polkadot'} />\n            </Col>\n            <Col xs={3} className=\"text-start text-truncate\">\n              {truncateMiddle(candidate.accountId?.toString())}\n            </Col>\n            <Col>\n              {candidate.kind.isDeposit\n                ? 'Deposit'\n                : 'Vouch'\n              }\n            </Col>\n            <Col className=\"text-start\">\n              {candidate.kind.isDeposit\n                ? <FormatBalance balance={candidate.value} />\n                : <p>\n                    Vouching Member: {candidate.kind.asVouch[0].toHuman()} -\n                    Vouching Tip: {candidate.kind.asVouch[1].toHuman()}\n                  </p>\n              }\n            </Col>\n            <Col>\n              Skeptics\n            </Col>\n          </ DataRow>\n        ))\n        : 'NONE'\n      }\n    </>\n\n  return (content)\n}\n\nexport { CandidatesPage }\n","import { Nav } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst NavigationBar = () => (\n  <StyledNav defaultActiveKey=\"/explore/bidders\" className=\"py-2 my-4\">\n    <StyledNavItem>\n      <Nav.Link as={NavLink} to=\"/explore/bidders\">Bidders</Nav.Link>\n    </StyledNavItem>\n    <StyledNavItem>\n      <Nav.Link as={NavLink} to=\"/explore/members\">Members</Nav.Link>\n    </StyledNavItem>\n    <StyledNavItem>\n      <Nav.Link as={NavLink} to=\"/explore/candidates\">Candidates</Nav.Link>\n    </StyledNavItem>\n    <StyledNavItem>\n      <Nav.Link as={NavLink} to=\"/explore/suspended\">Suspended</Nav.Link>\n    </StyledNavItem>\n  </StyledNav>\n)\n\nconst StyledNav = styled(Nav)`\n  border-bottom: 1px solid ${(props) => props.theme.colors.darkGrey};\n  border-top: 1px solid ${(props) => props.theme.colors.darkGrey};\n`\n\nconst StyledNavItem = styled(Nav.Item)`\n  .nav-link {\n    color: ${(props) => props.theme.colors.lightGrey};\n  }\n\n  .nav-link:hover {\n    color: ${(props) => props.theme.colors.darkGrey};\n  }\n\n  .nav-link.active {\n    color: ${(props) => props.theme.colors.white};\n  }\n`\n\nexport { NavigationBar }\n","import type { ApiPromise } from '@polkadot/api'\nimport { DeriveSociety, DeriveSocietyCandidate, DeriveSocietyMember } from '@polkadot/api-derive/types'\nimport { BN } from '@polkadot/util'\n\nasync function buildSocietyCandidatesArray(\n  api: ApiPromise,\n  candidates: DeriveSocietyCandidate[]\n): Promise<SocietyCandidate[]> {\n  const candidatesMap: Record<string, SocietyCandidate> = {}\n  candidates.forEach((candidate: DeriveSocietyCandidate) => {\n    candidatesMap[candidate.accountId.toString()] = {\n      accountId: candidate.accountId,\n      kind: candidate.kind,\n      value: candidate.value,\n      isSuspended: candidate.isSuspended,\n      voters: [],\n      skeptics: []\n    }\n  })\n\n  const candidateVotes = candidates.length\n    ? await Promise.all(candidates.map(({ accountId }) =>\n      api.query.society.votes.entries(accountId)\n    ))\n    : []\n\n  candidateVotes.forEach((votes): void => {\n    votes.forEach(([votesStorage, voteOption]) => {\n      const [candidateAccountId, voterAccountId] = votesStorage.args\n\n      if (voteOption.isSome) {\n        const key = voterAccountId.toString()\n        const vote = voteOption.unwrap()\n\n        if (vote.isSkeptic) {\n          !candidatesMap[candidateAccountId.toString()].skeptics.includes(key) &&\n          candidatesMap[candidateAccountId.toString()].skeptics.push(key)\n        } else {\n          !candidatesMap[candidateAccountId.toString()].voters.includes(key) &&\n          candidatesMap[candidateAccountId.toString()].voters.push(key)\n        }\n      }\n    })\n  })\n\n  return Object.values(candidatesMap)\n}\n\nconst buildSocietyMembersArray = (\n  members: DeriveSocietyMember[],\n  info: DeriveSociety | null,\n  maxStrikes: BN,\n  ): SocietyMember[] => {\n\n  const membersArray = members.map((member) => ({\n    accountId: member.accountId,\n    hasPayouts: member.payouts.length > 0,\n    hasStrikes: !member.strikes.isEmpty,\n    isDefender: !!info?.defender?.eq(member.accountId),\n    isDefenderVoter: !!member.isDefenderVoter,\n    isFounder: !!info?.founder?.eq(member.accountId),\n    isHead: !!info?.head?.eq(member.accountId),\n    isSkeptic: !!member.vote?.isSkeptic,\n    isSuspended: member.isSuspended,\n    isWarned: !member.isSuspended && member.strikes.gt(maxStrikes),\n    payouts: member.payouts,\n    strikes: member.strikes,\n    strikesCount: member.strikes.isEmpty ? 0 : member.strikes.toNumber(),\n  }))\n\n  return membersArray.sort(sortSocietyMembersArray)\n}\n\nconst sortSocietyMembersArray = (a: SocietyMember, b: SocietyMember): number => (\n  a.isDefender !== b.isDefender\n    ? a.isDefender ? -1 : 1\n    : a.isHead !== b.isHead\n      ? (a.isHead ? -1 : 1)\n      : a.isFounder !== b.isFounder\n        ? (a.isFounder ? -1 : 1)\n        : a.isSkeptic !== b.isSkeptic\n          ? (a.isSkeptic ? -1 : 1)\n          : a.isDefenderVoter !== (b.isDefenderVoter)\n            ? (a.isDefenderVoter ? -1 : 1)\n            : 1\n)\n\nexport { buildSocietyCandidatesArray, buildSocietyMembersArray }\n","import Identicon from '@polkadot/react-identicon'\nimport { Badge, Col } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { DataHeaderRow, DataRow } from '../../../components/base'\nimport { truncateMiddle } from '../../../helpers/truncate'\n\nconst StyledDataRow = styled(DataRow)`\n  background-color: ${(props) => props.isDefender ? '#73003d' : ''};\n  border: ${(props) => props.isDefender ? '2px solid #E6007A' : ''};\n\n`\n\nconst MembersList = ({ members }: { members: SocietyMember[] }): JSX.Element => {\n  return (<>\n    <DataHeaderRow>\n      <Col xs={1} className=\"text-center\">#</Col>\n      <Col xs={3} className=\"text-start\">Wallet Hash</Col>\n      <Col xs={8} className=\"text-end\"></Col>\n    </DataHeaderRow>\n    {members.map((member: SocietyMember) => (\n      <StyledDataRow key={member.accountId.toString()} isDefender={member.isDefender}>\n        <Col xs={1} className=\"text-center\">\n          <Identicon value={member.accountId} size={32} theme={'polkadot'} />\n        </Col>\n        <Col xs={3} className=\"text-start text-truncate\">\n          {truncateMiddle(member.accountId?.toString())}\n        </Col>\n        <Col xs={8} className=\"text-end\">\n          {member.isDefender\n            ? <Badge pill bg=\"primary\" className=\"me-2 p-2\">Defender</Badge>\n            : <></>\n          }\n          {member.isFounder\n            ? <Badge pill bg=\"dark\" className=\"me-2 p-2\">Founder</Badge>\n            : <></>\n          }\n          {member.isHead\n            ? <Badge pill bg=\"dark\" className=\"me-2 p-2\">Society Head</Badge>\n            : <></>\n          }\n          {member.isSkeptic\n            ? <Badge pill bg=\"danger\" className=\"me-2 p-2\">Round Skeptic</Badge>\n            : <></>\n          }\n        </Col>\n      </StyledDataRow>\n    ))}\n  </>)\n}\n\nexport { MembersList }\n","import { ApiPromise } from '@polkadot/api'\nimport { Spinner } from 'react-bootstrap'\nimport { MembersList } from './MembersList'\n\ntype MembersPageProps = {\n  api: ApiPromise | null,\n  members: SocietyMember[]\n}\n\nconst MembersPage = ({ api, members }: MembersPageProps): JSX.Element => {\n  const loading = !api?.query?.society\n  const content = loading\n    ? <Spinner animation=\"border\" variant=\"primary\" />\n    : <MembersList members={members} />\n\n  return (content)\n}\n\nexport { MembersPage }\n","import { DeriveSociety, DeriveSocietyCandidate, DeriveSocietyMember } from '@polkadot/api-derive/types'\nimport { useEffect, useState } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { Route, Routes } from 'react-router-dom'\nimport { useConsts } from '../../hooks/useConsts'\nimport { useKusama } from '../../kusama'\nimport { BiddersPage } from './BiddersPage'\nimport { CandidatesPage } from './CandidatesPage'\nimport { NavigationBar } from './components/NavigationBar'\nimport { buildSocietyCandidatesArray, buildSocietyMembersArray } from './helpers'\nimport { MembersPage } from './MembersPage'\n\nconst ExplorePage = (): JSX.Element => {\n  const { api } = useKusama()\n  const { maxStrikes } = useConsts()\n  const [candidates, setCandidates] = useState<SocietyCandidate[]>([])\n  const [info, setInfo] = useState<DeriveSociety | null>(null)\n  const [members, setMembers] = useState<SocietyMember[]>([])\n\n  const loading = !api?.query?.society\n\n  useEffect(() => {\n    if (!loading) {\n      api.derive.society.members().then((responseMembers: DeriveSocietyMember[]) => {\n        setMembers(buildSocietyMembersArray(responseMembers, info, maxStrikes))\n      })\n\n      api.derive.society.info().then((responseInfo: DeriveSociety) => {\n        setInfo(responseInfo)\n      })\n\n      api.derive.society.candidates().then((responseCandidates: DeriveSocietyCandidate[]) => {\n        buildSocietyCandidatesArray(api, responseCandidates).then(setCandidates).catch(console.error)\n      })\n    }\n  }, [api?.query?.society])\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <NavigationBar />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Routes>\n            <Route path=\"/\" element={<>TODO EXPLORE PAGE</>}/>\n            <Route path=\"/bidders\" element={<BiddersPage />}/>\n            <Route path=\"/members\" element={<MembersPage api={api} members={members}/>}/>\n            <Route path=\"/candidates\" element={<CandidatesPage api={api} candidates={candidates}/>}/>\n            <Route path=\"/suspended\" element={<>TODO SUSPENDED PAGE</>}/>\n          </Routes>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport { ExplorePage }\n","export default __webpack_public_path__ + \"static/media/canary-level-1.d3390cc2.svg\";","import { ReactElement } from 'react'\nimport { Badge } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport CanarySvgLevel1 from '../static/canary-level-1.svg'\n\ninterface LevelsType {\n  [key: string]: {badge: string, name: string, canary: ReactElement},\n}\n\n// Find a better way for positioning the canary (responsive)\nconst CanaryImg = styled.img`\n  position: absolute;\n  top: 23%;\n  left: 11%;\n  z-index: -1;\n`\n\nconst CanaryLevel1 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 1\" />\nconst CanaryLevel2 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 2\" />\nconst CanaryLevel3 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 3\" />\nconst CanaryLevel4 = <CanaryImg src={CanarySvgLevel1} alt=\"Canary Level 4\" />\n\nconst LEVELS: LevelsType = {\n  human: { badge: \"Level 1\", name: \"Human\", canary: CanaryLevel1 },\n  bidder: { badge: \"Level 2\", name: \"Bidder\", canary: CanaryLevel2 },\n  candidate: { badge: \"Level 3\", name: \"Candidate\", canary: CanaryLevel3 },\n  cyborg: { badge: \"Level 4\", name: \"Cyborg\", canary: CanaryLevel4 }\n}\n\nconst Level = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <p>\n        <Badge pill>{LEVELS[level].badge}</Badge>\n      </p>\n      {LEVELS[level].canary}\n      <h1><u>{LEVELS[level].name}</u></h1>\n    </>\n  )\n}\n\nexport { Level }\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\n\nconst NoFocus = styled.h5`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst StyledP = styled.p`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst DefaultLevelNotification  = (\n  <>\n    You are IN the society;<br/>\n    You are NOT a member;<br/>\n    You CAN&apos;T vote;<br/>\n    You CAN EXPLORE the chain data.\n  </>\n)\n\nconst HumanLevelNotification = (\n  <h5>\n    {DefaultLevelNotification}\n  </h5>\n)\n\nconst BidderLevelNotification = (\n  <h5>\n    Your bid NEEDS to get accepted;<br/>\n    <NoFocus>{DefaultLevelNotification}</NoFocus>\n  </h5>\n)\n\nconst CandidateLevelNotification = (\n  <h5>\n    You need to SUBMIT your Proof of Ink;<br/>\n    Your Proof of Ink needs to be VOTED;<br/>\n    <NoFocus>\n      Your bid should be low enough to get accepted;<br/>\n      {DefaultLevelNotification}\n    </NoFocus>\n  </h5>\n)\n\nconst CyborgLevelNotification = (\n  <>\n    <h5>\n      You can enjoy, now.\n    </h5>\n    <Link to=\"/guide\" className=\"ml-5 btn btn-primary\">\n      What&apos;s next?\n    </Link>\n  </>\n)\n\nconst LEVELS: LevelsType = {\n  human: HumanLevelNotification,\n  bidder: BidderLevelNotification,\n  candidate: CandidateLevelNotification,\n  cyborg: CyborgLevelNotification\n}\n\nconst LevelNotification = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <StyledP>Level Notification</StyledP>\n      {LEVELS[level]}\n    </>\n  )\n}\n\nexport { LevelNotification }\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\n\nconst StyledP = styled.p`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst HumanNextStep = (\n  <>\n    <h5 className=\"mb-4\">\n      To become a Candidate you need to level up;\n      <br/>\n      To level up you must first Submit a Bid.\n    </h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Bid Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/guide\" className=\"ml-5 btn btn-primary\">\n      Submit a Bid\n    </Link>\n  </>\n)\n\nconst BidderNextStep = (\n  <>\n    <h5>To become a Candidate your bid must fit the parameters.</h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Bid Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/explore/bidders\" className=\"ml-5 btn btn-primary\">\n      Check Bids\n    </Link>\n  </>\n)\n\nconst CandidateNextStep = (\n  <>\n    <h5>To become a Cyborg you need to submit the Proof of Ink.</h5>\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Proof of Ink (PoI) Rules\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/guide\" className=\"btn btn-outline-light-grey\">\n      Ink Art\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/explore/bidders\" className=\"ml-5 btn btn-primary\">\n      Submit Proof of Ink\n    </Link>\n  </>\n)\n\nconst CyborgNextStep = (\n  <>\n    <h5>Enjoy</h5>\n    <Link to=\"/explore/bidders\" className=\"btn btn-outline-light-grey\">\n      Vouch Bid\n    </Link>\n    &nbsp;&nbsp;\n    <Link to=\"/explore/bidders\" className=\"ml-5 btn btn-primary\">\n      Vote on Candidates\n    </Link>\n  </>\n)\n\nconst LEVELS: LevelsType = {\n  human: HumanNextStep,\n  bidder: BidderNextStep,\n  candidate: CandidateNextStep,\n  cyborg: CyborgNextStep\n}\n\nconst NextStep = () => {\n  const { level } = useAccount()\n\n  return (\n    <>\n      <StyledP>Next Step</StyledP>\n      {LEVELS[level]}\n    </>\n  )\n}\n\nexport { NextStep }\n","import styled from \"styled-components\"\n\nconst FormattedKSM = (props: { children: any }): JSX.Element => (\n  <>\n    <Value>{props.children}</Value>\n    &nbsp;&nbsp;\n    <Unit>KSM</Unit>\n  </>\n)\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { FormattedKSM }\n","import { Vec } from '@polkadot/types'\nimport { PalletSocietyBid } from '@polkadot/types/lookup'\nimport { useEffect, useState } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { useAccount } from '../../account/AccountContext'\nimport { FormattedKSM } from '../../helpers/FormattedKSM'\nimport { useKusama } from '../../kusama'\n\nconst Bid = () => {\n  const { api } = useKusama()\n  const { activeAccount } = useAccount()\n  const [bidAmount, setBidAmount] = useState<string>('0')\n\n  useEffect(() => {\n    if (api) {\n      api.query.society.bids().then((bids: Vec<PalletSocietyBid>) => {\n        const accountBid = bids.find((bid) => {\n          activeAccount && bid.who.toHuman() === activeAccount.address\n        })\n        if (!accountBid) return setBidAmount('0')\n\n        setBidAmount(accountBid.value.toHuman())\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>My Bid</h4>\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col>\n          <FormattedKSM>{bidAmount}</FormattedKSM>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button>Update</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport { Bid }\n","// @ts-nocheck\n// Copied from: https://github.com/polkadot-js/apps/blob/master/packages/react-hooks/src/useBlockTime.ts\n\nimport type { ApiPromise } from '@polkadot/api'\nimport { BN, BN_ONE, BN_THOUSAND, BN_TWO, bnToBn, extractTime } from '@polkadot/util'\nimport type { Time } from '@polkadot/util/types'\nimport { useMemo } from 'react'\nimport { useKusama } from '../kusama'\n\ntype Result = [number, string, Time]\n\nconst DEFAULT_TIME = new BN(6_000)\n\nconst THRESHOLD = BN_THOUSAND\n\nexport function useBlockTime(blocks: number | BN = BN_ONE, apiOverride?: ApiPromise | null): Result {\n  const { api } = useKusama()\n\n  return useMemo((): Result => {\n    const a = apiOverride || api\n    const blockTime =\n      a.consts.babe?.expectedBlockTime ||\n      a.consts.difficulty?.targetBlockTime ||\n      (a.consts.timestamp?.minimumPeriod.gte(THRESHOLD)\n        ? a.consts.timestamp.minimumPeriod.mul(BN_TWO)\n        : a.query.parachainSystem\n        ? DEFAULT_TIME.mul(BN_TWO)\n        : DEFAULT_TIME)\n    const value = blockTime.mul(bnToBn(blocks)).toNumber()\n    const time = extractTime(Math.abs(value))\n    const { days, hours, minutes, seconds } = time\n    const timeStr = [\n      days ? (days > 1 ? `${days} days` : '1 day') : null,\n      hours ? (hours > 1 ? `${hours} hrs` : '1 hr') : null,\n      minutes ? (minutes > 1 ? `${minutes} mins` : '1 min') : null,\n      seconds ? (seconds > 1 ? `${seconds} s` : '1 s') : null,\n    ]\n      .filter((s): s is string => !!s)\n      .slice(0, 2)\n      .join(' ')\n\n    return [blockTime.toNumber(), `${value < 0 ? '+' : ''}${timeStr}`, time]\n  }, [api, apiOverride, blocks])\n}\n","import { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\nimport styled from 'styled-components'\nimport { useBlockTime } from '../../hooks/useBlockTime'\nimport { useKusama } from '../../kusama'\n\nconst CurrentRoundProgress = (props: { percentageDone: number }): JSX.Element => (\n  <div style={{ width: 100, height: 100 }}>\n    <CircularProgressbar\n      value={props.percentageDone}\n      styles={buildStyles({\n        pathColor: '#E6007A',\n        trailColor: '#fff',\n        strokeLinecap: 'butt',\n      })}\n    />\n  </div>\n)\n\nconst CurrentRound = () => {\n  const { api } = useKusama()\n  const [currentBlock, setCurrentBlock] = useState<number>(0)\n  const [rotationPeriod, setRotationPeriod] = useState<number>(0)\n  const periodBlocksDone = currentBlock % rotationPeriod\n  const periodBlocksLeft = rotationPeriod - periodBlocksDone\n  const percentageDone = 100 - (periodBlocksLeft * 100) / rotationPeriod\n  const [, , time] = useBlockTime(periodBlocksLeft, api)\n  const { days, hours, minutes, seconds } = time\n\n  useEffect(() => {\n    if (api) {\n      const rotationPeriod = api.consts.society.rotationPeriod.toNumber()\n      api.derive.chain.bestNumber((block) => {\n        setCurrentBlock(block.toNumber())\n      })\n      setRotationPeriod(rotationPeriod)\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Current Round</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"auto\">\n          <CurrentRoundProgress percentageDone={percentageDone} />\n        </Col>\n        <Col className=\"ps-0\">\n          <Value>{days}</Value>&nbsp;<Unit>day</Unit>\n          <br />\n          <Value>{hours}</Value>&nbsp;<Unit>hrs.</Unit>\n          <br />\n          <Value>{minutes}</Value>&nbsp;<Unit>mins.</Unit>\n          <br />\n          <Value>{seconds}</Value>&nbsp;<Unit>secs.</Unit>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { CurrentRound }\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport { reportWebVitals }\n","import type { DeriveSociety } from '@polkadot/api-derive/types'\nimport { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { FormattedKSM } from '../../helpers/FormattedKSM'\nimport { useKusama } from '../../kusama'\n\nconst RoundPayout = () => {\n  const { api } = useKusama()\n  const [info, setInfo] = useState<DeriveSociety | any>()\n\n  useEffect(() => {\n    if (api) {\n      api.derive.society.info().then((response) => {\n        setInfo(response)\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Round Payout</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <FormattedKSM>{info?.pot.toHuman().substring(0, 5)}</FormattedKSM>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport { RoundPayout }\n","import { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../../account/AccountContext'\nimport { useConsts } from '../../hooks/useConsts'\nimport { useKusama } from '../../kusama'\n\nconst Circle = ({ active = false }: { active?: boolean }): JSX.Element => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"6\" cy=\"6\" r=\"6\" fill={active ? '#E6007A' : '#FFF'} />\n  </svg>\n)\n\nconst StrikesCounter = (props: { count: number; maxStrikes: number }): JSX.Element => {\n  const strikesArray = Array(props.count)\n    .fill(true)\n    .concat(Array(props.maxStrikes - props.count).fill(false))\n\n  return (\n    <>\n      {strikesArray.map((active, key) => (\n        <Circle key={key} active={active} />\n      ))}\n    </>\n  )\n}\n\nconst Strikes = () => {\n  const { api } = useKusama()\n  const { activeAccount } = useAccount()\n  const [strikes, setStrikes] = useState<number>(0)\n  const { maxStrikes } = useConsts()\n\n  useEffect(() => {\n    if (api) {\n      api.derive.society.members().then((members) => {\n        const account = members.find((member) => {\n          activeAccount && member.accountId.toString() === activeAccount.address\n        })\n        if (!account) return setStrikes(0)\n\n        setStrikes(account.strikes.toNumber())\n      })\n    }\n  }, [api])\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Strikes</h4>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <Value>{strikes}</Value>&nbsp;<Unit>/&nbsp;{maxStrikes.toNumber()}</Unit>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <StrikesCounter count={strikes} maxStrikes={maxStrikes.toNumber()} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst Unit = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`\n\nconst Value = styled.span`\n  color: ${(props) => props.theme.colors.white};\n`\n\nexport { Strikes }\n","import { ReactElement } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { useAccount } from '../../account/AccountContext'\nimport { Bid } from './Bid'\nimport { CurrentRound } from './CurrentRound'\nimport { RoundPayout } from './RoundPayout'\nimport { Strikes } from './Strikes'\n\nconst HumanCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n  </>\n)\nconst BidderCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Bid />\n    </Col>\n  </>\n)\nconst CandidateCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Bid />\n    </Col>\n  </>\n)\nconst CyborgCurrentRound = (\n  <>\n    <Col>\n      <CurrentRound />\n    </Col>\n    <Col>\n      <RoundPayout />\n    </Col>\n    <Col>\n      <Strikes />\n    </Col>\n  </>\n)\n\ninterface LevelsType {\n  [key: string]: ReactElement\n}\n\nconst LEVELS: LevelsType = {\n  human: HumanCurrentRound,\n  bidder: BidderCurrentRound,\n  candidate: CandidateCurrentRound,\n  cyborg: CyborgCurrentRound\n}\n\nconst RotationBar = () => {\n  const { level } = useAccount()\n  return (\n    <StyledDiv className=\"py-4\">\n      <Container>\n        <Row sm={4}>\n          {LEVELS[level]}\n        </Row>\n      </Container>\n    </StyledDiv>\n  )\n}\n\nconst StyledDiv = styled.div`\n  background-color: ${(props) => props.theme.colors.darkGrey};\n`\n\nexport { RotationBar }\n","import { Col, Container, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Level } from '../components/Level'\nimport { LevelNotification } from '../components/LevelNotification'\nimport { NextStep } from '../components/NextStep'\nimport { RotationBar } from '../components/rotation-bar/RotationBar'\n\nconst JourneyPage = (): JSX.Element => (\n  <>\n    <StyledDiv>\n      <Container>\n        <Row>\n          <StyledCol sm={3}>\n            <Level />\n          </StyledCol>\n          <StyledCol sm={4}>\n            <LevelNotification />\n          </StyledCol>\n          <StyledCol sm={5}>\n            <NextStep />\n          </StyledCol>\n        </Row>\n      </Container>\n    </StyledDiv>\n    <RotationBar />\n  </>\n)\n\nconst StyledDiv = styled.div`\n  height: 69.1vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledCol = styled(Col)`\n  z-index: 10;\n`\n\nexport { JourneyPage }\n","export default __webpack_public_path__ + \"static/media/kappa-sigma-mu-title.ca479de5.svg\";","import ThreeCanary from \"@kappasigmamu/canary-component\"\nimport { Vec } from '@polkadot/types'\nimport { AccountId32 } from '@polkadot/types/interfaces'\nimport { useEffect, useState } from \"react\"\nimport { Col, Row } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAccount } from '../account/AccountContext'\nimport { PrimaryLgButton } from '../components/base'\nimport { fetchAccounts } from '../helpers/fetchAccounts'\nimport { useKusama } from '../kusama'\nimport KappaSigmaMuTitle from '../static/kappa-sigma-mu-title.svg'\n\nconst LandingPage = () => {\n  const navigate = useNavigate()\n  const { activeAccount, setActiveAccount, setAccounts } = useAccount()\n  const { api } = useKusama()\n  const [members, setMembers] = useState<Array<string>>([\"\"])\n\n  useEffect(() => {\n    if (api) {\n      api.query.society.members().then((response: Vec<AccountId32>) => {\n        setMembers(response.map((account) => account.toString()))\n      })\n    }\n  }, [api])\n\n  const handlePrimaryButtonClick = () => {\n    if (!activeAccount) {\n      fetchAccounts(setAccounts, setActiveAccount)\n    }\n    navigate('/journey')\n  }\n\n  return (\n    <FullPageHeightRow>\n      <div className=\"position-absolute\" style={{height: '85vh'}}>\n        <ThreeCanary\n            objectUrl={`./static/canary.glb`}\n            nodes={\n              members.map((id : string) => ({\n                \"hash\": id.toString()\n              }))\n            }\n        />\n      </div>\n      <CentralizedCol span={6} />\n      <CentralizedCol span={6}>\n        <h1>Join the</h1>\n        <KappaSigmaMu src={KappaSigmaMuTitle} alt=\"Kappa Sigma Mu Title\" />\n        <p>\n          <PrimaryLgButton onClick={handlePrimaryButtonClick}>\n            Become a Cyborg\n          </PrimaryLgButton>\n        </p>\n        <p>\n          <Link to=\"/guide\">Cyborg Guide</Link>\n        </p>\n      </CentralizedCol>\n    </FullPageHeightRow>\n  )\n}\n\nconst KappaSigmaMu = styled.img`\n  margin: 50px 0;\n  display: block;\n`\n\nconst FullPageHeightRow = styled(Row)`\n  height: 85vh;\n  width: 100%;\n`\n\nconst CentralizedCol = styled(Col)`\n  align-items: center;\n  margin-bottom: auto;\n  margin-top: auto;\n  z-index: 1;\n`\n\nexport { LandingPage }\n","export default __webpack_public_path__ + \"static/media/map-icon.95057c80.svg\";","import { Badge, Col, Container, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Level } from '../components/Level'\nimport { SocialIcons } from '../components/SocialIcons'\nimport MapIcon from '../static/map-icon.svg'\n\nconst WelcomePage = (): JSX.Element => {\n  return (\n    <>\n      <LevelContainer>\n        <Row>\n          <Col><Level /></Col>\n        </Row>\n      </LevelContainer>\n      <StyledContainer>\n        <Row className=\"mb-5\">\n          <Col><Badge pill>WALLET CONNECTED</Badge></Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col><h1>Welcome, Human.</h1></Col>\n        </Row>\n        <Row>\n          <Col>\n            <h4>JOIN THE LOUNGE</h4>\n            <p>Meet other Cyborgs.</p>\n          </Col>\n          <Col>\n            <h4>CHECK THE GAME GUIDE</h4>\n            <p>Learn how to become a Cyborg.</p>\n          </Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col><SocialIcons /></Col>\n          <Col>\n            <Link to=\"/guide\" className=\"btn btn-outline-secondary\" role=\"button\">\n              Cyborg Guide\n              &nbsp;&nbsp;\n              <span className=\"btn-label\">\n                <img src={MapIcon} alt=\"Map Icon\" />\n              </span>\n            </Link>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Link to=\"/journey\" className=\"btn btn-primary\" role=\"button\">\n              Begin Journey\n            </Link>\n          </Col>\n        </Row>\n      </StyledContainer>\n    </>\n  )\n}\n\nconst StyledContainer = styled(Container)`\n  position: absolute;\n  width: 564px;\n  height: 492px;\n  border-radius: 12px;\n  background: rgba(52, 58, 64, 0.5);\n  text-align: center;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 59px;\n`\n\nconst LevelContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport { WelcomePage }\n","import { Suspense } from 'react'\nimport { BrowserRouter, Outlet, Route, Routes, useLocation } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { AccountContextProvider } from '../account/AccountContext'\nimport { Navbar } from '../components/Navbar'\nimport { KusamaContextProvider } from '../kusama'\nimport { GlobalStyle } from '../styles/globalStyle'\nimport { Theme } from '../styles/Theme'\nimport { CyborgGuidePage } from './CyborgGuidePage'\nimport { ExplorePage } from './explore/ExplorePage'\nimport { JourneyPage } from './JourneyPage'\nimport { LandingPage } from './LandingPage'\nimport { WelcomePage } from './WelcomePage'\n\nconst AppNavigation = () => {\n  const { pathname } = useLocation()\n  const isRoot = !!pathname.match(\"[/]$\")\n\n  return (\n    <>\n      <Navbar\n        showAccount\n        showExploreButton\n        showBrandIcon={!isRoot}\n        showSocialIcons={isRoot || pathname.includes(\"guide\")}\n      />\n      <Outlet />\n    </>\n  )\n}\n\nconst AppRouter = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"\" element={<AppNavigation />}>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/guide\" element={<CyborgGuidePage />} />\n          <Route path=\"/welcome\" element={<WelcomePage />} />\n          <Route path=\"/journey\" element={<JourneyPage />} />\n          <Route path=\"/explore/*\" element={<ExplorePage />} />\n          <Route path=\"*\" element={<>NOT FOUND</>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <KusamaContextProvider>\n      <AccountContextProvider>\n        <ThemeProvider theme={Theme}>\n          <GlobalStyle />\n            <Suspense fallback={<p>ERROR/LOADING...</p>}>\n              <AppRouter />\n            </Suspense>\n        </ThemeProvider>\n      </AccountContextProvider>\n    </KusamaContextProvider>\n  </>\n)\n\nexport { App }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './pages/App'\nimport { reportWebVitals } from './reportWebVitals'\n\nimport './styles/bootstrap.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}